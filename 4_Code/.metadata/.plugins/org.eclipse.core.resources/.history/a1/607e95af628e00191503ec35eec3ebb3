
103RB_5.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000c90  0800010c  0800010c  0001010c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000094  08000d9c  08000d9c  00010d9c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .init_array   00000004  08000e30  08000e30  00010e30  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .fini_array   00000004  08000e34  08000e34  00010e34  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .data         00000068  20000000  08000e38  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .bss          0000002c  20000068  08000ea0  00020068  2**2
                  ALLOC
  7 ._user_heap_stack 00000600  20000094  08000ea0  00020094  2**0
                  ALLOC
  8 .ARM.attributes 00000029  00000000  00000000  00020068  2**0
                  CONTENTS, READONLY
  9 .debug_line   00000797  00000000  00000000  00020091  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   00001bd1  00000000  00000000  00020828  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 00000529  00000000  00000000  000223f9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_aranges 00000088  00000000  00000000  00022928  2**3
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000020  00000000  00000000  000229b0  2**3
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00000159  00000000  00000000  000229d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    000007a3  00000000  00000000  00022b29  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .comment      0000007c  00000000  00000000  000232cc  2**0
                  CONTENTS, READONLY
 17 .debug_frame  00000824  00000000  00000000  00023348  2**2
                  CONTENTS, READONLY, DEBUGGING
 18 .stab         0000009c  00000000  00000000  00023b6c  2**2
                  CONTENTS, READONLY, DEBUGGING
 19 .stabstr      0000014d  00000000  00000000  00023c08  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	; (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	; (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	; (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	20000068 	.word	0x20000068
 8000128:	00000000 	.word	0x00000000
 800012c:	08000d84 	.word	0x08000d84

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	; (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	; (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	; (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	2000006c 	.word	0x2000006c
 8000148:	08000d84 	.word	0x08000d84

0800014c <SystemInit>:
  */
void SystemInit (void)
{
  /* Reset the RCC clock configuration to the default reset state(for debug purpose) */
  /* Set HSION bit */
  RCC->CR |= 0x00000001U;
 800014c:	4b0f      	ldr	r3, [pc, #60]	; (800018c <SystemInit+0x40>)
 800014e:	681a      	ldr	r2, [r3, #0]
 8000150:	f042 0201 	orr.w	r2, r2, #1
 8000154:	601a      	str	r2, [r3, #0]

  /* Reset SW, HPRE, PPRE1, PPRE2, ADCPRE and MCO bits */
#if !defined(STM32F105xC) && !defined(STM32F107xC)
  RCC->CFGR &= 0xF8FF0000U;
 8000156:	6859      	ldr	r1, [r3, #4]
 8000158:	4a0d      	ldr	r2, [pc, #52]	; (8000190 <SystemInit+0x44>)
 800015a:	400a      	ands	r2, r1
 800015c:	605a      	str	r2, [r3, #4]
#else
  RCC->CFGR &= 0xF0FF0000U;
#endif /* STM32F105xC */   
  
  /* Reset HSEON, CSSON and PLLON bits */
  RCC->CR &= 0xFEF6FFFFU;
 800015e:	681a      	ldr	r2, [r3, #0]
 8000160:	f022 7284 	bic.w	r2, r2, #17301504	; 0x1080000
 8000164:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8000168:	601a      	str	r2, [r3, #0]

  /* Reset HSEBYP bit */
  RCC->CR &= 0xFFFBFFFFU;
 800016a:	681a      	ldr	r2, [r3, #0]
 800016c:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8000170:	601a      	str	r2, [r3, #0]

  /* Reset PLLSRC, PLLXTPRE, PLLMUL and USBPRE/OTGFSPRE bits */
  RCC->CFGR &= 0xFF80FFFFU;
 8000172:	685a      	ldr	r2, [r3, #4]
 8000174:	f422 02fe 	bic.w	r2, r2, #8323072	; 0x7f0000
 8000178:	605a      	str	r2, [r3, #4]

  /* Reset CFGR2 register */
  RCC->CFGR2 = 0x00000000U;      
#else
  /* Disable all interrupts and clear pending bits  */
  RCC->CIR = 0x009F0000U;
 800017a:	f44f 021f 	mov.w	r2, #10420224	; 0x9f0000
 800017e:	609a      	str	r2, [r3, #8]
#endif 

#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH. */
 8000180:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8000184:	4b03      	ldr	r3, [pc, #12]	; (8000194 <SystemInit+0x48>)
 8000186:	609a      	str	r2, [r3, #8]
 8000188:	4770      	bx	lr
 800018a:	bf00      	nop
 800018c:	40021000 	.word	0x40021000
 8000190:	f8ff0000 	.word	0xf8ff0000
 8000194:	e000ed00 	.word	0xe000ed00

08000198 <SystemCoreClockUpdate>:
#if defined(STM32F100xB) || defined(STM32F100xE)
  uint32_t prediv1factor = 0U;
#endif /* STM32F100xB or STM32F100xE */
    
  /* Get SYSCLK source -------------------------------------------------------*/
  tmp = RCC->CFGR & RCC_CFGR_SWS;
 8000198:	4b1f      	ldr	r3, [pc, #124]	; (8000218 <SystemCoreClockUpdate+0x80>)
 800019a:	685b      	ldr	r3, [r3, #4]
 800019c:	f003 030c 	and.w	r3, r3, #12
  
  switch (tmp)
 80001a0:	2b04      	cmp	r3, #4
 80001a2:	d014      	beq.n	80001ce <SystemCoreClockUpdate+0x36>
 80001a4:	2b08      	cmp	r3, #8
 80001a6:	d016      	beq.n	80001d6 <SystemCoreClockUpdate+0x3e>
 80001a8:	b11b      	cbz	r3, 80001b2 <SystemCoreClockUpdate+0x1a>
      }
#endif /* STM32F105xC */ 
      break;

    default:
      SystemCoreClock = HSI_VALUE;
 80001aa:	4a1c      	ldr	r2, [pc, #112]	; (800021c <SystemCoreClockUpdate+0x84>)
 80001ac:	4b1c      	ldr	r3, [pc, #112]	; (8000220 <SystemCoreClockUpdate+0x88>)
 80001ae:	601a      	str	r2, [r3, #0]
      break;
 80001b0:	e002      	b.n	80001b8 <SystemCoreClockUpdate+0x20>
      SystemCoreClock = HSI_VALUE;
 80001b2:	4a1a      	ldr	r2, [pc, #104]	; (800021c <SystemCoreClockUpdate+0x84>)
 80001b4:	4b1a      	ldr	r3, [pc, #104]	; (8000220 <SystemCoreClockUpdate+0x88>)
 80001b6:	601a      	str	r2, [r3, #0]
  }
  
  /* Compute HCLK clock frequency ----------------*/
  /* Get HCLK prescaler */
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4U)];
 80001b8:	4b17      	ldr	r3, [pc, #92]	; (8000218 <SystemCoreClockUpdate+0x80>)
 80001ba:	685b      	ldr	r3, [r3, #4]
 80001bc:	f3c3 1303 	ubfx	r3, r3, #4, #4
 80001c0:	4a18      	ldr	r2, [pc, #96]	; (8000224 <SystemCoreClockUpdate+0x8c>)
 80001c2:	5cd1      	ldrb	r1, [r2, r3]
  /* HCLK clock frequency */
  SystemCoreClock >>= tmp;  
 80001c4:	4a16      	ldr	r2, [pc, #88]	; (8000220 <SystemCoreClockUpdate+0x88>)
 80001c6:	6813      	ldr	r3, [r2, #0]
 80001c8:	40cb      	lsrs	r3, r1
 80001ca:	6013      	str	r3, [r2, #0]
 80001cc:	4770      	bx	lr
      SystemCoreClock = HSE_VALUE;
 80001ce:	4a13      	ldr	r2, [pc, #76]	; (800021c <SystemCoreClockUpdate+0x84>)
 80001d0:	4b13      	ldr	r3, [pc, #76]	; (8000220 <SystemCoreClockUpdate+0x88>)
 80001d2:	601a      	str	r2, [r3, #0]
      break;
 80001d4:	e7f0      	b.n	80001b8 <SystemCoreClockUpdate+0x20>
      pllmull = RCC->CFGR & RCC_CFGR_PLLMULL;
 80001d6:	4a10      	ldr	r2, [pc, #64]	; (8000218 <SystemCoreClockUpdate+0x80>)
 80001d8:	6853      	ldr	r3, [r2, #4]
      pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 80001da:	6852      	ldr	r2, [r2, #4]
      pllmull = ( pllmull >> 18U) + 2U;
 80001dc:	f3c3 4383 	ubfx	r3, r3, #18, #4
 80001e0:	3302      	adds	r3, #2
      if (pllsource == 0x00U)
 80001e2:	f412 3f80 	tst.w	r2, #65536	; 0x10000
 80001e6:	d00a      	beq.n	80001fe <SystemCoreClockUpdate+0x66>
        if ((RCC->CFGR & RCC_CFGR_PLLXTPRE) != (uint32_t)RESET)
 80001e8:	4a0b      	ldr	r2, [pc, #44]	; (8000218 <SystemCoreClockUpdate+0x80>)
 80001ea:	6852      	ldr	r2, [r2, #4]
 80001ec:	f412 3f00 	tst.w	r2, #131072	; 0x20000
 80001f0:	d00b      	beq.n	800020a <SystemCoreClockUpdate+0x72>
          SystemCoreClock = (HSE_VALUE >> 1U) * pllmull;
 80001f2:	4a0d      	ldr	r2, [pc, #52]	; (8000228 <SystemCoreClockUpdate+0x90>)
 80001f4:	fb02 f303 	mul.w	r3, r2, r3
 80001f8:	4a09      	ldr	r2, [pc, #36]	; (8000220 <SystemCoreClockUpdate+0x88>)
 80001fa:	6013      	str	r3, [r2, #0]
 80001fc:	e7dc      	b.n	80001b8 <SystemCoreClockUpdate+0x20>
        SystemCoreClock = (HSI_VALUE >> 1U) * pllmull;
 80001fe:	4a0a      	ldr	r2, [pc, #40]	; (8000228 <SystemCoreClockUpdate+0x90>)
 8000200:	fb02 f303 	mul.w	r3, r2, r3
 8000204:	4a06      	ldr	r2, [pc, #24]	; (8000220 <SystemCoreClockUpdate+0x88>)
 8000206:	6013      	str	r3, [r2, #0]
 8000208:	e7d6      	b.n	80001b8 <SystemCoreClockUpdate+0x20>
          SystemCoreClock = HSE_VALUE * pllmull;
 800020a:	4a04      	ldr	r2, [pc, #16]	; (800021c <SystemCoreClockUpdate+0x84>)
 800020c:	fb02 f303 	mul.w	r3, r2, r3
 8000210:	4a03      	ldr	r2, [pc, #12]	; (8000220 <SystemCoreClockUpdate+0x88>)
 8000212:	6013      	str	r3, [r2, #0]
 8000214:	e7d0      	b.n	80001b8 <SystemCoreClockUpdate+0x20>
 8000216:	bf00      	nop
 8000218:	40021000 	.word	0x40021000
 800021c:	007a1200 	.word	0x007a1200
 8000220:	20000000 	.word	0x20000000
 8000224:	08000d9c 	.word	0x08000d9c
 8000228:	003d0900 	.word	0x003d0900

0800022c <ledInit>:
#include "stm32f103xb.h"


void ledInit(void)
{
	GPIOA->CRL &= ~(0x2<<0|0x2<<4|0x2<<8|0x2<<12);
 800022c:	4a03      	ldr	r2, [pc, #12]	; (800023c <ledInit+0x10>)
 800022e:	6813      	ldr	r3, [r2, #0]
 8000230:	f423 5308 	bic.w	r3, r3, #8704	; 0x2200
 8000234:	f023 0322 	bic.w	r3, r3, #34	; 0x22
 8000238:	6013      	str	r3, [r2, #0]
 800023a:	4770      	bx	lr
 800023c:	40010800 	.word	0x40010800

08000240 <ledOn>:
	//GPIOx_ODR
}

void ledOn(uint8_t ch)
{
	GPIOA->ODR |= 0xf;
 8000240:	4a02      	ldr	r2, [pc, #8]	; (800024c <ledOn+0xc>)
 8000242:	68d3      	ldr	r3, [r2, #12]
 8000244:	f043 030f 	orr.w	r3, r3, #15
 8000248:	60d3      	str	r3, [r2, #12]
 800024a:	4770      	bx	lr
 800024c:	40010800 	.word	0x40010800

08000250 <ledOff>:
}

void ledOff(uint8_t ch)
{
	GPIOA->ODR &= (~0xf);
 8000250:	4a02      	ldr	r2, [pc, #8]	; (800025c <ledOff+0xc>)
 8000252:	68d3      	ldr	r3, [r2, #12]
 8000254:	f023 030f 	bic.w	r3, r3, #15
 8000258:	60d3      	str	r3, [r2, #12]
 800025a:	4770      	bx	lr
 800025c:	40010800 	.word	0x40010800

08000260 <ledToggle>:
}

void ledToggle(uint8_t ch)
{
 8000260:	4770      	bx	lr

08000262 <Delay_us>:

void Delay_us(unsigned int time_us)		/* time delay for us in 8MHz */
{
  register unsigned int i;

  for(i = 0; i < time_us; i++)			// 3 cycle
 8000262:	2300      	movs	r3, #0
 8000264:	e005      	b.n	8000272 <Delay_us+0x10>
    { asm volatile("NOP");
 8000266:	bf00      	nop
      asm volatile("NOP");
 8000268:	bf00      	nop
      asm volatile("NOP");
 800026a:	bf00      	nop
      asm volatile("NOP");
 800026c:	bf00      	nop
      asm volatile("NOP");			// 5 cycle
 800026e:	bf00      	nop
  for(i = 0; i < time_us; i++)			// 3 cycle
 8000270:	3301      	adds	r3, #1
 8000272:	4283      	cmp	r3, r0
 8000274:	d3f7      	bcc.n	8000266 <Delay_us+0x4>
    }
}
 8000276:	4770      	bx	lr

08000278 <Delay_ms>:

void Delay_ms(unsigned int time_ms)		/* time delay for ms in 8MHz */
{
 8000278:	b538      	push	{r3, r4, r5, lr}
 800027a:	4605      	mov	r5, r0
  register unsigned int i;

  for(i = 0; i < time_ms; i++)
 800027c:	2400      	movs	r4, #0
 800027e:	e004      	b.n	800028a <Delay_ms+0x12>
    Delay_us(1000);
 8000280:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000284:	f7ff ffed 	bl	8000262 <Delay_us>
  for(i = 0; i < time_ms; i++)
 8000288:	3401      	adds	r4, #1
 800028a:	42ac      	cmp	r4, r5
 800028c:	d3f8      	bcc.n	8000280 <Delay_ms+0x8>
}
 800028e:	bd38      	pop	{r3, r4, r5, pc}

08000290 <SerialPutChar>:

void SerialPutChar(char c)
{

    while((USART1->SR & 0x80) == 0);    // �����Ͱ� TDR���� Shift Register�� �Ű����� ������ ��ٸ�.
 8000290:	4b03      	ldr	r3, [pc, #12]	; (80002a0 <SerialPutChar+0x10>)
 8000292:	681b      	ldr	r3, [r3, #0]
 8000294:	f013 0f80 	tst.w	r3, #128	; 0x80
 8000298:	d0fa      	beq.n	8000290 <SerialPutChar>
    USART1->DR = c;    // �����͸� USART1_DR �������Ϳ� ��
 800029a:	4b01      	ldr	r3, [pc, #4]	; (80002a0 <SerialPutChar+0x10>)
 800029c:	6058      	str	r0, [r3, #4]
 800029e:	4770      	bx	lr
 80002a0:	40013800 	.word	0x40013800

080002a4 <Serial_PutString>:

}

void Serial_PutString(char* s)
{    // ���ڿ� ���
 80002a4:	b510      	push	{r4, lr}
 80002a6:	4604      	mov	r4, r0

    while(*s != '\0'){
 80002a8:	e002      	b.n	80002b0 <Serial_PutString+0xc>
        SerialPutChar(*s);
 80002aa:	f7ff fff1 	bl	8000290 <SerialPutChar>
        s++;
 80002ae:	3401      	adds	r4, #1
    while(*s != '\0'){
 80002b0:	7820      	ldrb	r0, [r4, #0]
 80002b2:	2800      	cmp	r0, #0
 80002b4:	d1f9      	bne.n	80002aa <Serial_PutString+0x6>
    }
}
 80002b6:	bd10      	pop	{r4, pc}

080002b8 <EXTI_Config>:

void EXTI_Config(void)
{
	AFIO->EXTICR[4] = 0x0020;
 80002b8:	2220      	movs	r2, #32
 80002ba:	4b05      	ldr	r3, [pc, #20]	; (80002d0 <EXTI_Config+0x18>)
 80002bc:	619a      	str	r2, [r3, #24]
	EXTI->IMR 		= 0x01<<13;//
 80002be:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80002c2:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80002c6:	601a      	str	r2, [r3, #0]
	EXTI->EMR 		= 0x01<<13;
 80002c8:	605a      	str	r2, [r3, #4]
    EXTI->RTSR 		= 0x01<<13;
 80002ca:	609a      	str	r2, [r3, #8]
 80002cc:	4770      	bx	lr
 80002ce:	bf00      	nop
 80002d0:	40010000 	.word	0x40010000

080002d4 <RCC_Config>:
}

void RCC_Config(void)
{

	RCC->CFGR	= 0x001F8402;
 80002d4:	4b09      	ldr	r3, [pc, #36]	; (80002fc <RCC_Config+0x28>)
 80002d6:	4a0a      	ldr	r2, [pc, #40]	; (8000300 <RCC_Config+0x2c>)
 80002d8:	605a      	str	r2, [r3, #4]
	RCC->CR    	= 0x01010082;
 80002da:	f502 0261 	add.w	r2, r2, #14745600	; 0xe10000
 80002de:	f502 42f9 	add.w	r2, r2, #31872	; 0x7c80
 80002e2:	601a      	str	r2, [r3, #0]
	RCC->APB2ENR |= 0x14;		// PA,PC Ȱ��ȭ
 80002e4:	699a      	ldr	r2, [r3, #24]
 80002e6:	f042 0214 	orr.w	r2, r2, #20
 80002ea:	619a      	str	r2, [r3, #24]
	GPIOA->CRL = 0x33333333;	// PortA 10MHz, General push-pull Output
 80002ec:	f04f 3333 	mov.w	r3, #858993459	; 0x33333333
 80002f0:	4a04      	ldr	r2, [pc, #16]	; (8000304 <RCC_Config+0x30>)
 80002f2:	6013      	str	r3, [r2, #0]
	GPIOC->CRL = 0x33333333;	// PortC 10MHz, General push-pull Output
 80002f4:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 80002f8:	6013      	str	r3, [r2, #0]
 80002fa:	4770      	bx	lr
 80002fc:	40021000 	.word	0x40021000
 8000300:	001f8402 	.word	0x001f8402
 8000304:	40010800 	.word	0x40010800

08000308 <EXTI0_IRQHandler>:

}


void EXTI0_IRQHandler(void)
{
 8000308:	b508      	push	{r3, lr}
	printf(" 0�� \r\n");
 800030a:	4802      	ldr	r0, [pc, #8]	; (8000314 <EXTI0_IRQHandler+0xc>)
 800030c:	f000 f8e4 	bl	80004d8 <puts>
 8000310:	bd08      	pop	{r3, pc}
 8000312:	bf00      	nop
 8000314:	08000db4 	.word	0x08000db4

08000318 <EXTI1_IRQHandler>:
}

void EXTI1_IRQHandler(void)
{
 8000318:	b508      	push	{r3, lr}
	printf(" 1�� \r\n");
 800031a:	4802      	ldr	r0, [pc, #8]	; (8000324 <EXTI1_IRQHandler+0xc>)
 800031c:	f000 f8dc 	bl	80004d8 <puts>
 8000320:	bd08      	pop	{r3, pc}
 8000322:	bf00      	nop
 8000324:	08000dc0 	.word	0x08000dc0

08000328 <EXTI15_10_IRQHandler>:
}

void EXTI15_10_IRQHandler(void)
{
 8000328:	b510      	push	{r4, lr}
	GPIOA->BSRR |= 0x20;
 800032a:	4c0f      	ldr	r4, [pc, #60]	; (8000368 <EXTI15_10_IRQHandler+0x40>)
 800032c:	6923      	ldr	r3, [r4, #16]
 800032e:	f043 0320 	orr.w	r3, r3, #32
 8000332:	6123      	str	r3, [r4, #16]
	Delay_ms(100);
 8000334:	2064      	movs	r0, #100	; 0x64
 8000336:	f7ff ff9f 	bl	8000278 <Delay_ms>
	GPIOA->BRR |= 0x20;
 800033a:	6963      	ldr	r3, [r4, #20]
 800033c:	f043 0320 	orr.w	r3, r3, #32
 8000340:	6163      	str	r3, [r4, #20]
	Delay_ms(100);
 8000342:	2064      	movs	r0, #100	; 0x64
 8000344:	f7ff ff98 	bl	8000278 <Delay_ms>
	GPIOA->BSRR |= 0x20;
 8000348:	6923      	ldr	r3, [r4, #16]
 800034a:	f043 0320 	orr.w	r3, r3, #32
 800034e:	6123      	str	r3, [r4, #16]
	Delay_ms(100);
 8000350:	2064      	movs	r0, #100	; 0x64
 8000352:	f7ff ff91 	bl	8000278 <Delay_ms>
	GPIOA->BRR |= 0x20;
 8000356:	6963      	ldr	r3, [r4, #20]
 8000358:	f043 0320 	orr.w	r3, r3, #32
 800035c:	6163      	str	r3, [r4, #20]
	Delay_ms(100);
 800035e:	2064      	movs	r0, #100	; 0x64
 8000360:	f7ff ff8a 	bl	8000278 <Delay_ms>
 8000364:	bd10      	pop	{r4, pc}
 8000366:	bf00      	nop
 8000368:	40010800 	.word	0x40010800

0800036c <USART3_IRQHandler>:

}

void USART3_IRQHandler(void)
{
 800036c:	4770      	bx	lr
 800036e:	bf00      	nop

08000370 <main>:
#include "My103.h"
#include "stm32f103xb.h"


int main(void){
 8000370:	b508      	push	{r3, lr}

	RCC_Config();
 8000372:	f7ff ffaf 	bl	80002d4 <RCC_Config>
	EXTI_Config();
 8000376:	f7ff ff9f 	bl	80002b8 <EXTI_Config>
	//int i = 0;
	ledInit();
 800037a:	f7ff ff57 	bl	800022c <ledInit>


	while(1){
		ledOn(0);
 800037e:	2000      	movs	r0, #0
 8000380:	f7ff ff5e 	bl	8000240 <ledOn>
		ledOff(0);
 8000384:	2000      	movs	r0, #0
 8000386:	f7ff ff63 	bl	8000250 <ledOff>
 800038a:	e7f8      	b.n	800037e <main+0xe>

0800038c <Reset_Handler>:
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:

/* Copy the data segment initializers from flash to SRAM */
  movs r1, #0
 800038c:	2100      	movs	r1, #0
  b LoopCopyDataInit
 800038e:	e003      	b.n	8000398 <LoopCopyDataInit>

08000390 <CopyDataInit>:

CopyDataInit:
  ldr r3, =_sidata
 8000390:	4b0b      	ldr	r3, [pc, #44]	; (80003c0 <LoopFillZerobss+0x14>)
  ldr r3, [r3, r1]
 8000392:	585b      	ldr	r3, [r3, r1]
  str r3, [r0, r1]
 8000394:	5043      	str	r3, [r0, r1]
  adds r1, r1, #4
 8000396:	3104      	adds	r1, #4

08000398 <LoopCopyDataInit>:

LoopCopyDataInit:
  ldr r0, =_sdata
 8000398:	480a      	ldr	r0, [pc, #40]	; (80003c4 <LoopFillZerobss+0x18>)
  ldr r3, =_edata
 800039a:	4b0b      	ldr	r3, [pc, #44]	; (80003c8 <LoopFillZerobss+0x1c>)
  adds r2, r0, r1
 800039c:	1842      	adds	r2, r0, r1
  cmp r2, r3
 800039e:	429a      	cmp	r2, r3
  bcc CopyDataInit
 80003a0:	d3f6      	bcc.n	8000390 <CopyDataInit>
  ldr r2, =_sbss
 80003a2:	4a0a      	ldr	r2, [pc, #40]	; (80003cc <LoopFillZerobss+0x20>)
  b LoopFillZerobss
 80003a4:	e002      	b.n	80003ac <LoopFillZerobss>

080003a6 <FillZerobss>:
/* Zero fill the bss segment. */
FillZerobss:
  movs r3, #0
 80003a6:	2300      	movs	r3, #0
  str r3, [r2], #4
 80003a8:	f842 3b04 	str.w	r3, [r2], #4

080003ac <LoopFillZerobss>:

LoopFillZerobss:
  ldr r3, = _ebss
 80003ac:	4b08      	ldr	r3, [pc, #32]	; (80003d0 <LoopFillZerobss+0x24>)
  cmp r2, r3
 80003ae:	429a      	cmp	r2, r3
  bcc FillZerobss
 80003b0:	d3f9      	bcc.n	80003a6 <FillZerobss>

/* Call the clock system intitialization function.*/
    bl  SystemInit
 80003b2:	f7ff fecb 	bl	800014c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80003b6:	f000 f80f 	bl	80003d8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80003ba:	f7ff ffd9 	bl	8000370 <main>
  bx lr
 80003be:	4770      	bx	lr
  ldr r3, =_sidata
 80003c0:	08000e38 	.word	0x08000e38
  ldr r0, =_sdata
 80003c4:	20000000 	.word	0x20000000
  ldr r3, =_edata
 80003c8:	20000068 	.word	0x20000068
  ldr r2, =_sbss
 80003cc:	20000068 	.word	0x20000068
  ldr r3, = _ebss
 80003d0:	20000094 	.word	0x20000094

080003d4 <ADC1_2_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80003d4:	e7fe      	b.n	80003d4 <ADC1_2_IRQHandler>
	...

080003d8 <__libc_init_array>:
 80003d8:	b570      	push	{r4, r5, r6, lr}
 80003da:	2500      	movs	r5, #0
 80003dc:	4e0c      	ldr	r6, [pc, #48]	; (8000410 <__libc_init_array+0x38>)
 80003de:	4c0d      	ldr	r4, [pc, #52]	; (8000414 <__libc_init_array+0x3c>)
 80003e0:	1ba4      	subs	r4, r4, r6
 80003e2:	10a4      	asrs	r4, r4, #2
 80003e4:	42a5      	cmp	r5, r4
 80003e6:	d109      	bne.n	80003fc <__libc_init_array+0x24>
 80003e8:	f000 fccc 	bl	8000d84 <_init>
 80003ec:	2500      	movs	r5, #0
 80003ee:	4e0a      	ldr	r6, [pc, #40]	; (8000418 <__libc_init_array+0x40>)
 80003f0:	4c0a      	ldr	r4, [pc, #40]	; (800041c <__libc_init_array+0x44>)
 80003f2:	1ba4      	subs	r4, r4, r6
 80003f4:	10a4      	asrs	r4, r4, #2
 80003f6:	42a5      	cmp	r5, r4
 80003f8:	d105      	bne.n	8000406 <__libc_init_array+0x2e>
 80003fa:	bd70      	pop	{r4, r5, r6, pc}
 80003fc:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000400:	4798      	blx	r3
 8000402:	3501      	adds	r5, #1
 8000404:	e7ee      	b.n	80003e4 <__libc_init_array+0xc>
 8000406:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800040a:	4798      	blx	r3
 800040c:	3501      	adds	r5, #1
 800040e:	e7f2      	b.n	80003f6 <__libc_init_array+0x1e>
 8000410:	08000e30 	.word	0x08000e30
 8000414:	08000e30 	.word	0x08000e30
 8000418:	08000e30 	.word	0x08000e30
 800041c:	08000e34 	.word	0x08000e34

08000420 <_puts_r>:
 8000420:	b570      	push	{r4, r5, r6, lr}
 8000422:	460e      	mov	r6, r1
 8000424:	4605      	mov	r5, r0
 8000426:	b118      	cbz	r0, 8000430 <_puts_r+0x10>
 8000428:	6983      	ldr	r3, [r0, #24]
 800042a:	b90b      	cbnz	r3, 8000430 <_puts_r+0x10>
 800042c:	f000 fa0e 	bl	800084c <__sinit>
 8000430:	69ab      	ldr	r3, [r5, #24]
 8000432:	68ac      	ldr	r4, [r5, #8]
 8000434:	b913      	cbnz	r3, 800043c <_puts_r+0x1c>
 8000436:	4628      	mov	r0, r5
 8000438:	f000 fa08 	bl	800084c <__sinit>
 800043c:	4b23      	ldr	r3, [pc, #140]	; (80004cc <_puts_r+0xac>)
 800043e:	429c      	cmp	r4, r3
 8000440:	d117      	bne.n	8000472 <_puts_r+0x52>
 8000442:	686c      	ldr	r4, [r5, #4]
 8000444:	89a3      	ldrh	r3, [r4, #12]
 8000446:	071b      	lsls	r3, r3, #28
 8000448:	d51d      	bpl.n	8000486 <_puts_r+0x66>
 800044a:	6923      	ldr	r3, [r4, #16]
 800044c:	b1db      	cbz	r3, 8000486 <_puts_r+0x66>
 800044e:	3e01      	subs	r6, #1
 8000450:	68a3      	ldr	r3, [r4, #8]
 8000452:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000456:	3b01      	subs	r3, #1
 8000458:	60a3      	str	r3, [r4, #8]
 800045a:	b9e9      	cbnz	r1, 8000498 <_puts_r+0x78>
 800045c:	2b00      	cmp	r3, #0
 800045e:	da2e      	bge.n	80004be <_puts_r+0x9e>
 8000460:	4622      	mov	r2, r4
 8000462:	210a      	movs	r1, #10
 8000464:	4628      	mov	r0, r5
 8000466:	f000 f83f 	bl	80004e8 <__swbuf_r>
 800046a:	3001      	adds	r0, #1
 800046c:	d011      	beq.n	8000492 <_puts_r+0x72>
 800046e:	200a      	movs	r0, #10
 8000470:	bd70      	pop	{r4, r5, r6, pc}
 8000472:	4b17      	ldr	r3, [pc, #92]	; (80004d0 <_puts_r+0xb0>)
 8000474:	429c      	cmp	r4, r3
 8000476:	d101      	bne.n	800047c <_puts_r+0x5c>
 8000478:	68ac      	ldr	r4, [r5, #8]
 800047a:	e7e3      	b.n	8000444 <_puts_r+0x24>
 800047c:	4b15      	ldr	r3, [pc, #84]	; (80004d4 <_puts_r+0xb4>)
 800047e:	429c      	cmp	r4, r3
 8000480:	bf08      	it	eq
 8000482:	68ec      	ldreq	r4, [r5, #12]
 8000484:	e7de      	b.n	8000444 <_puts_r+0x24>
 8000486:	4621      	mov	r1, r4
 8000488:	4628      	mov	r0, r5
 800048a:	f000 f87f 	bl	800058c <__swsetup_r>
 800048e:	2800      	cmp	r0, #0
 8000490:	d0dd      	beq.n	800044e <_puts_r+0x2e>
 8000492:	f04f 30ff 	mov.w	r0, #4294967295
 8000496:	bd70      	pop	{r4, r5, r6, pc}
 8000498:	2b00      	cmp	r3, #0
 800049a:	da04      	bge.n	80004a6 <_puts_r+0x86>
 800049c:	69a2      	ldr	r2, [r4, #24]
 800049e:	4293      	cmp	r3, r2
 80004a0:	db06      	blt.n	80004b0 <_puts_r+0x90>
 80004a2:	290a      	cmp	r1, #10
 80004a4:	d004      	beq.n	80004b0 <_puts_r+0x90>
 80004a6:	6823      	ldr	r3, [r4, #0]
 80004a8:	1c5a      	adds	r2, r3, #1
 80004aa:	6022      	str	r2, [r4, #0]
 80004ac:	7019      	strb	r1, [r3, #0]
 80004ae:	e7cf      	b.n	8000450 <_puts_r+0x30>
 80004b0:	4622      	mov	r2, r4
 80004b2:	4628      	mov	r0, r5
 80004b4:	f000 f818 	bl	80004e8 <__swbuf_r>
 80004b8:	3001      	adds	r0, #1
 80004ba:	d1c9      	bne.n	8000450 <_puts_r+0x30>
 80004bc:	e7e9      	b.n	8000492 <_puts_r+0x72>
 80004be:	200a      	movs	r0, #10
 80004c0:	6823      	ldr	r3, [r4, #0]
 80004c2:	1c5a      	adds	r2, r3, #1
 80004c4:	6022      	str	r2, [r4, #0]
 80004c6:	7018      	strb	r0, [r3, #0]
 80004c8:	bd70      	pop	{r4, r5, r6, pc}
 80004ca:	bf00      	nop
 80004cc:	08000dec 	.word	0x08000dec
 80004d0:	08000e0c 	.word	0x08000e0c
 80004d4:	08000dcc 	.word	0x08000dcc

080004d8 <puts>:
 80004d8:	4b02      	ldr	r3, [pc, #8]	; (80004e4 <puts+0xc>)
 80004da:	4601      	mov	r1, r0
 80004dc:	6818      	ldr	r0, [r3, #0]
 80004de:	f7ff bf9f 	b.w	8000420 <_puts_r>
 80004e2:	bf00      	nop
 80004e4:	20000004 	.word	0x20000004

080004e8 <__swbuf_r>:
 80004e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80004ea:	460e      	mov	r6, r1
 80004ec:	4614      	mov	r4, r2
 80004ee:	4605      	mov	r5, r0
 80004f0:	b118      	cbz	r0, 80004fa <__swbuf_r+0x12>
 80004f2:	6983      	ldr	r3, [r0, #24]
 80004f4:	b90b      	cbnz	r3, 80004fa <__swbuf_r+0x12>
 80004f6:	f000 f9a9 	bl	800084c <__sinit>
 80004fa:	4b21      	ldr	r3, [pc, #132]	; (8000580 <__swbuf_r+0x98>)
 80004fc:	429c      	cmp	r4, r3
 80004fe:	d12a      	bne.n	8000556 <__swbuf_r+0x6e>
 8000500:	686c      	ldr	r4, [r5, #4]
 8000502:	69a3      	ldr	r3, [r4, #24]
 8000504:	60a3      	str	r3, [r4, #8]
 8000506:	89a3      	ldrh	r3, [r4, #12]
 8000508:	071a      	lsls	r2, r3, #28
 800050a:	d52e      	bpl.n	800056a <__swbuf_r+0x82>
 800050c:	6923      	ldr	r3, [r4, #16]
 800050e:	b363      	cbz	r3, 800056a <__swbuf_r+0x82>
 8000510:	6923      	ldr	r3, [r4, #16]
 8000512:	6820      	ldr	r0, [r4, #0]
 8000514:	b2f6      	uxtb	r6, r6
 8000516:	1ac0      	subs	r0, r0, r3
 8000518:	6963      	ldr	r3, [r4, #20]
 800051a:	4637      	mov	r7, r6
 800051c:	4298      	cmp	r0, r3
 800051e:	db04      	blt.n	800052a <__swbuf_r+0x42>
 8000520:	4621      	mov	r1, r4
 8000522:	4628      	mov	r0, r5
 8000524:	f000 f928 	bl	8000778 <_fflush_r>
 8000528:	bb28      	cbnz	r0, 8000576 <__swbuf_r+0x8e>
 800052a:	68a3      	ldr	r3, [r4, #8]
 800052c:	3001      	adds	r0, #1
 800052e:	3b01      	subs	r3, #1
 8000530:	60a3      	str	r3, [r4, #8]
 8000532:	6823      	ldr	r3, [r4, #0]
 8000534:	1c5a      	adds	r2, r3, #1
 8000536:	6022      	str	r2, [r4, #0]
 8000538:	701e      	strb	r6, [r3, #0]
 800053a:	6963      	ldr	r3, [r4, #20]
 800053c:	4298      	cmp	r0, r3
 800053e:	d004      	beq.n	800054a <__swbuf_r+0x62>
 8000540:	89a3      	ldrh	r3, [r4, #12]
 8000542:	07db      	lsls	r3, r3, #31
 8000544:	d519      	bpl.n	800057a <__swbuf_r+0x92>
 8000546:	2e0a      	cmp	r6, #10
 8000548:	d117      	bne.n	800057a <__swbuf_r+0x92>
 800054a:	4621      	mov	r1, r4
 800054c:	4628      	mov	r0, r5
 800054e:	f000 f913 	bl	8000778 <_fflush_r>
 8000552:	b190      	cbz	r0, 800057a <__swbuf_r+0x92>
 8000554:	e00f      	b.n	8000576 <__swbuf_r+0x8e>
 8000556:	4b0b      	ldr	r3, [pc, #44]	; (8000584 <__swbuf_r+0x9c>)
 8000558:	429c      	cmp	r4, r3
 800055a:	d101      	bne.n	8000560 <__swbuf_r+0x78>
 800055c:	68ac      	ldr	r4, [r5, #8]
 800055e:	e7d0      	b.n	8000502 <__swbuf_r+0x1a>
 8000560:	4b09      	ldr	r3, [pc, #36]	; (8000588 <__swbuf_r+0xa0>)
 8000562:	429c      	cmp	r4, r3
 8000564:	bf08      	it	eq
 8000566:	68ec      	ldreq	r4, [r5, #12]
 8000568:	e7cb      	b.n	8000502 <__swbuf_r+0x1a>
 800056a:	4621      	mov	r1, r4
 800056c:	4628      	mov	r0, r5
 800056e:	f000 f80d 	bl	800058c <__swsetup_r>
 8000572:	2800      	cmp	r0, #0
 8000574:	d0cc      	beq.n	8000510 <__swbuf_r+0x28>
 8000576:	f04f 37ff 	mov.w	r7, #4294967295
 800057a:	4638      	mov	r0, r7
 800057c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800057e:	bf00      	nop
 8000580:	08000dec 	.word	0x08000dec
 8000584:	08000e0c 	.word	0x08000e0c
 8000588:	08000dcc 	.word	0x08000dcc

0800058c <__swsetup_r>:
 800058c:	4b32      	ldr	r3, [pc, #200]	; (8000658 <__swsetup_r+0xcc>)
 800058e:	b570      	push	{r4, r5, r6, lr}
 8000590:	681d      	ldr	r5, [r3, #0]
 8000592:	4606      	mov	r6, r0
 8000594:	460c      	mov	r4, r1
 8000596:	b125      	cbz	r5, 80005a2 <__swsetup_r+0x16>
 8000598:	69ab      	ldr	r3, [r5, #24]
 800059a:	b913      	cbnz	r3, 80005a2 <__swsetup_r+0x16>
 800059c:	4628      	mov	r0, r5
 800059e:	f000 f955 	bl	800084c <__sinit>
 80005a2:	4b2e      	ldr	r3, [pc, #184]	; (800065c <__swsetup_r+0xd0>)
 80005a4:	429c      	cmp	r4, r3
 80005a6:	d10f      	bne.n	80005c8 <__swsetup_r+0x3c>
 80005a8:	686c      	ldr	r4, [r5, #4]
 80005aa:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80005ae:	b29a      	uxth	r2, r3
 80005b0:	0715      	lsls	r5, r2, #28
 80005b2:	d42c      	bmi.n	800060e <__swsetup_r+0x82>
 80005b4:	06d0      	lsls	r0, r2, #27
 80005b6:	d411      	bmi.n	80005dc <__swsetup_r+0x50>
 80005b8:	2209      	movs	r2, #9
 80005ba:	6032      	str	r2, [r6, #0]
 80005bc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80005c0:	81a3      	strh	r3, [r4, #12]
 80005c2:	f04f 30ff 	mov.w	r0, #4294967295
 80005c6:	bd70      	pop	{r4, r5, r6, pc}
 80005c8:	4b25      	ldr	r3, [pc, #148]	; (8000660 <__swsetup_r+0xd4>)
 80005ca:	429c      	cmp	r4, r3
 80005cc:	d101      	bne.n	80005d2 <__swsetup_r+0x46>
 80005ce:	68ac      	ldr	r4, [r5, #8]
 80005d0:	e7eb      	b.n	80005aa <__swsetup_r+0x1e>
 80005d2:	4b24      	ldr	r3, [pc, #144]	; (8000664 <__swsetup_r+0xd8>)
 80005d4:	429c      	cmp	r4, r3
 80005d6:	bf08      	it	eq
 80005d8:	68ec      	ldreq	r4, [r5, #12]
 80005da:	e7e6      	b.n	80005aa <__swsetup_r+0x1e>
 80005dc:	0751      	lsls	r1, r2, #29
 80005de:	d512      	bpl.n	8000606 <__swsetup_r+0x7a>
 80005e0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80005e2:	b141      	cbz	r1, 80005f6 <__swsetup_r+0x6a>
 80005e4:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80005e8:	4299      	cmp	r1, r3
 80005ea:	d002      	beq.n	80005f2 <__swsetup_r+0x66>
 80005ec:	4630      	mov	r0, r6
 80005ee:	f000 fa23 	bl	8000a38 <_free_r>
 80005f2:	2300      	movs	r3, #0
 80005f4:	6363      	str	r3, [r4, #52]	; 0x34
 80005f6:	89a3      	ldrh	r3, [r4, #12]
 80005f8:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80005fc:	81a3      	strh	r3, [r4, #12]
 80005fe:	2300      	movs	r3, #0
 8000600:	6063      	str	r3, [r4, #4]
 8000602:	6923      	ldr	r3, [r4, #16]
 8000604:	6023      	str	r3, [r4, #0]
 8000606:	89a3      	ldrh	r3, [r4, #12]
 8000608:	f043 0308 	orr.w	r3, r3, #8
 800060c:	81a3      	strh	r3, [r4, #12]
 800060e:	6923      	ldr	r3, [r4, #16]
 8000610:	b94b      	cbnz	r3, 8000626 <__swsetup_r+0x9a>
 8000612:	89a3      	ldrh	r3, [r4, #12]
 8000614:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000618:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800061c:	d003      	beq.n	8000626 <__swsetup_r+0x9a>
 800061e:	4621      	mov	r1, r4
 8000620:	4630      	mov	r0, r6
 8000622:	f000 f9c1 	bl	80009a8 <__smakebuf_r>
 8000626:	89a2      	ldrh	r2, [r4, #12]
 8000628:	f012 0301 	ands.w	r3, r2, #1
 800062c:	d00c      	beq.n	8000648 <__swsetup_r+0xbc>
 800062e:	2300      	movs	r3, #0
 8000630:	60a3      	str	r3, [r4, #8]
 8000632:	6963      	ldr	r3, [r4, #20]
 8000634:	425b      	negs	r3, r3
 8000636:	61a3      	str	r3, [r4, #24]
 8000638:	6923      	ldr	r3, [r4, #16]
 800063a:	b953      	cbnz	r3, 8000652 <__swsetup_r+0xc6>
 800063c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000640:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 8000644:	d1ba      	bne.n	80005bc <__swsetup_r+0x30>
 8000646:	bd70      	pop	{r4, r5, r6, pc}
 8000648:	0792      	lsls	r2, r2, #30
 800064a:	bf58      	it	pl
 800064c:	6963      	ldrpl	r3, [r4, #20]
 800064e:	60a3      	str	r3, [r4, #8]
 8000650:	e7f2      	b.n	8000638 <__swsetup_r+0xac>
 8000652:	2000      	movs	r0, #0
 8000654:	e7f7      	b.n	8000646 <__swsetup_r+0xba>
 8000656:	bf00      	nop
 8000658:	20000004 	.word	0x20000004
 800065c:	08000dec 	.word	0x08000dec
 8000660:	08000e0c 	.word	0x08000e0c
 8000664:	08000dcc 	.word	0x08000dcc

08000668 <__sflush_r>:
 8000668:	898a      	ldrh	r2, [r1, #12]
 800066a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800066e:	4605      	mov	r5, r0
 8000670:	0710      	lsls	r0, r2, #28
 8000672:	460c      	mov	r4, r1
 8000674:	d45a      	bmi.n	800072c <__sflush_r+0xc4>
 8000676:	684b      	ldr	r3, [r1, #4]
 8000678:	2b00      	cmp	r3, #0
 800067a:	dc05      	bgt.n	8000688 <__sflush_r+0x20>
 800067c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800067e:	2b00      	cmp	r3, #0
 8000680:	dc02      	bgt.n	8000688 <__sflush_r+0x20>
 8000682:	2000      	movs	r0, #0
 8000684:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000688:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800068a:	2e00      	cmp	r6, #0
 800068c:	d0f9      	beq.n	8000682 <__sflush_r+0x1a>
 800068e:	2300      	movs	r3, #0
 8000690:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000694:	682f      	ldr	r7, [r5, #0]
 8000696:	602b      	str	r3, [r5, #0]
 8000698:	d033      	beq.n	8000702 <__sflush_r+0x9a>
 800069a:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800069c:	89a3      	ldrh	r3, [r4, #12]
 800069e:	075a      	lsls	r2, r3, #29
 80006a0:	d505      	bpl.n	80006ae <__sflush_r+0x46>
 80006a2:	6863      	ldr	r3, [r4, #4]
 80006a4:	1ac0      	subs	r0, r0, r3
 80006a6:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80006a8:	b10b      	cbz	r3, 80006ae <__sflush_r+0x46>
 80006aa:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80006ac:	1ac0      	subs	r0, r0, r3
 80006ae:	2300      	movs	r3, #0
 80006b0:	4602      	mov	r2, r0
 80006b2:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80006b4:	6a21      	ldr	r1, [r4, #32]
 80006b6:	4628      	mov	r0, r5
 80006b8:	47b0      	blx	r6
 80006ba:	1c43      	adds	r3, r0, #1
 80006bc:	89a3      	ldrh	r3, [r4, #12]
 80006be:	d106      	bne.n	80006ce <__sflush_r+0x66>
 80006c0:	6829      	ldr	r1, [r5, #0]
 80006c2:	291d      	cmp	r1, #29
 80006c4:	d84b      	bhi.n	800075e <__sflush_r+0xf6>
 80006c6:	4a2b      	ldr	r2, [pc, #172]	; (8000774 <__sflush_r+0x10c>)
 80006c8:	40ca      	lsrs	r2, r1
 80006ca:	07d6      	lsls	r6, r2, #31
 80006cc:	d547      	bpl.n	800075e <__sflush_r+0xf6>
 80006ce:	2200      	movs	r2, #0
 80006d0:	6062      	str	r2, [r4, #4]
 80006d2:	6922      	ldr	r2, [r4, #16]
 80006d4:	04d9      	lsls	r1, r3, #19
 80006d6:	6022      	str	r2, [r4, #0]
 80006d8:	d504      	bpl.n	80006e4 <__sflush_r+0x7c>
 80006da:	1c42      	adds	r2, r0, #1
 80006dc:	d101      	bne.n	80006e2 <__sflush_r+0x7a>
 80006de:	682b      	ldr	r3, [r5, #0]
 80006e0:	b903      	cbnz	r3, 80006e4 <__sflush_r+0x7c>
 80006e2:	6560      	str	r0, [r4, #84]	; 0x54
 80006e4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80006e6:	602f      	str	r7, [r5, #0]
 80006e8:	2900      	cmp	r1, #0
 80006ea:	d0ca      	beq.n	8000682 <__sflush_r+0x1a>
 80006ec:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80006f0:	4299      	cmp	r1, r3
 80006f2:	d002      	beq.n	80006fa <__sflush_r+0x92>
 80006f4:	4628      	mov	r0, r5
 80006f6:	f000 f99f 	bl	8000a38 <_free_r>
 80006fa:	2000      	movs	r0, #0
 80006fc:	6360      	str	r0, [r4, #52]	; 0x34
 80006fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000702:	6a21      	ldr	r1, [r4, #32]
 8000704:	2301      	movs	r3, #1
 8000706:	4628      	mov	r0, r5
 8000708:	47b0      	blx	r6
 800070a:	1c41      	adds	r1, r0, #1
 800070c:	d1c6      	bne.n	800069c <__sflush_r+0x34>
 800070e:	682b      	ldr	r3, [r5, #0]
 8000710:	2b00      	cmp	r3, #0
 8000712:	d0c3      	beq.n	800069c <__sflush_r+0x34>
 8000714:	2b1d      	cmp	r3, #29
 8000716:	d001      	beq.n	800071c <__sflush_r+0xb4>
 8000718:	2b16      	cmp	r3, #22
 800071a:	d101      	bne.n	8000720 <__sflush_r+0xb8>
 800071c:	602f      	str	r7, [r5, #0]
 800071e:	e7b0      	b.n	8000682 <__sflush_r+0x1a>
 8000720:	89a3      	ldrh	r3, [r4, #12]
 8000722:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000726:	81a3      	strh	r3, [r4, #12]
 8000728:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800072c:	690f      	ldr	r7, [r1, #16]
 800072e:	2f00      	cmp	r7, #0
 8000730:	d0a7      	beq.n	8000682 <__sflush_r+0x1a>
 8000732:	0793      	lsls	r3, r2, #30
 8000734:	bf18      	it	ne
 8000736:	2300      	movne	r3, #0
 8000738:	680e      	ldr	r6, [r1, #0]
 800073a:	bf08      	it	eq
 800073c:	694b      	ldreq	r3, [r1, #20]
 800073e:	eba6 0807 	sub.w	r8, r6, r7
 8000742:	600f      	str	r7, [r1, #0]
 8000744:	608b      	str	r3, [r1, #8]
 8000746:	f1b8 0f00 	cmp.w	r8, #0
 800074a:	dd9a      	ble.n	8000682 <__sflush_r+0x1a>
 800074c:	4643      	mov	r3, r8
 800074e:	463a      	mov	r2, r7
 8000750:	6a21      	ldr	r1, [r4, #32]
 8000752:	4628      	mov	r0, r5
 8000754:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000756:	47b0      	blx	r6
 8000758:	2800      	cmp	r0, #0
 800075a:	dc07      	bgt.n	800076c <__sflush_r+0x104>
 800075c:	89a3      	ldrh	r3, [r4, #12]
 800075e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000762:	81a3      	strh	r3, [r4, #12]
 8000764:	f04f 30ff 	mov.w	r0, #4294967295
 8000768:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800076c:	4407      	add	r7, r0
 800076e:	eba8 0800 	sub.w	r8, r8, r0
 8000772:	e7e8      	b.n	8000746 <__sflush_r+0xde>
 8000774:	20400001 	.word	0x20400001

08000778 <_fflush_r>:
 8000778:	b538      	push	{r3, r4, r5, lr}
 800077a:	690b      	ldr	r3, [r1, #16]
 800077c:	4605      	mov	r5, r0
 800077e:	460c      	mov	r4, r1
 8000780:	b1db      	cbz	r3, 80007ba <_fflush_r+0x42>
 8000782:	b118      	cbz	r0, 800078c <_fflush_r+0x14>
 8000784:	6983      	ldr	r3, [r0, #24]
 8000786:	b90b      	cbnz	r3, 800078c <_fflush_r+0x14>
 8000788:	f000 f860 	bl	800084c <__sinit>
 800078c:	4b0c      	ldr	r3, [pc, #48]	; (80007c0 <_fflush_r+0x48>)
 800078e:	429c      	cmp	r4, r3
 8000790:	d109      	bne.n	80007a6 <_fflush_r+0x2e>
 8000792:	686c      	ldr	r4, [r5, #4]
 8000794:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000798:	b17b      	cbz	r3, 80007ba <_fflush_r+0x42>
 800079a:	4621      	mov	r1, r4
 800079c:	4628      	mov	r0, r5
 800079e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80007a2:	f7ff bf61 	b.w	8000668 <__sflush_r>
 80007a6:	4b07      	ldr	r3, [pc, #28]	; (80007c4 <_fflush_r+0x4c>)
 80007a8:	429c      	cmp	r4, r3
 80007aa:	d101      	bne.n	80007b0 <_fflush_r+0x38>
 80007ac:	68ac      	ldr	r4, [r5, #8]
 80007ae:	e7f1      	b.n	8000794 <_fflush_r+0x1c>
 80007b0:	4b05      	ldr	r3, [pc, #20]	; (80007c8 <_fflush_r+0x50>)
 80007b2:	429c      	cmp	r4, r3
 80007b4:	bf08      	it	eq
 80007b6:	68ec      	ldreq	r4, [r5, #12]
 80007b8:	e7ec      	b.n	8000794 <_fflush_r+0x1c>
 80007ba:	2000      	movs	r0, #0
 80007bc:	bd38      	pop	{r3, r4, r5, pc}
 80007be:	bf00      	nop
 80007c0:	08000dec 	.word	0x08000dec
 80007c4:	08000e0c 	.word	0x08000e0c
 80007c8:	08000dcc 	.word	0x08000dcc

080007cc <_cleanup_r>:
 80007cc:	4901      	ldr	r1, [pc, #4]	; (80007d4 <_cleanup_r+0x8>)
 80007ce:	f000 b8a9 	b.w	8000924 <_fwalk_reent>
 80007d2:	bf00      	nop
 80007d4:	08000779 	.word	0x08000779

080007d8 <std.isra.0>:
 80007d8:	2300      	movs	r3, #0
 80007da:	b510      	push	{r4, lr}
 80007dc:	4604      	mov	r4, r0
 80007de:	6003      	str	r3, [r0, #0]
 80007e0:	6043      	str	r3, [r0, #4]
 80007e2:	6083      	str	r3, [r0, #8]
 80007e4:	8181      	strh	r1, [r0, #12]
 80007e6:	6643      	str	r3, [r0, #100]	; 0x64
 80007e8:	81c2      	strh	r2, [r0, #14]
 80007ea:	6103      	str	r3, [r0, #16]
 80007ec:	6143      	str	r3, [r0, #20]
 80007ee:	6183      	str	r3, [r0, #24]
 80007f0:	4619      	mov	r1, r3
 80007f2:	2208      	movs	r2, #8
 80007f4:	305c      	adds	r0, #92	; 0x5c
 80007f6:	f000 f917 	bl	8000a28 <memset>
 80007fa:	4b05      	ldr	r3, [pc, #20]	; (8000810 <std.isra.0+0x38>)
 80007fc:	6224      	str	r4, [r4, #32]
 80007fe:	6263      	str	r3, [r4, #36]	; 0x24
 8000800:	4b04      	ldr	r3, [pc, #16]	; (8000814 <std.isra.0+0x3c>)
 8000802:	62a3      	str	r3, [r4, #40]	; 0x28
 8000804:	4b04      	ldr	r3, [pc, #16]	; (8000818 <std.isra.0+0x40>)
 8000806:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000808:	4b04      	ldr	r3, [pc, #16]	; (800081c <std.isra.0+0x44>)
 800080a:	6323      	str	r3, [r4, #48]	; 0x30
 800080c:	bd10      	pop	{r4, pc}
 800080e:	bf00      	nop
 8000810:	08000bad 	.word	0x08000bad
 8000814:	08000bcf 	.word	0x08000bcf
 8000818:	08000c07 	.word	0x08000c07
 800081c:	08000c2b 	.word	0x08000c2b

08000820 <__sfmoreglue>:
 8000820:	b570      	push	{r4, r5, r6, lr}
 8000822:	2568      	movs	r5, #104	; 0x68
 8000824:	1e4a      	subs	r2, r1, #1
 8000826:	4355      	muls	r5, r2
 8000828:	460e      	mov	r6, r1
 800082a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800082e:	f000 f94f 	bl	8000ad0 <_malloc_r>
 8000832:	4604      	mov	r4, r0
 8000834:	b140      	cbz	r0, 8000848 <__sfmoreglue+0x28>
 8000836:	2100      	movs	r1, #0
 8000838:	e880 0042 	stmia.w	r0, {r1, r6}
 800083c:	300c      	adds	r0, #12
 800083e:	60a0      	str	r0, [r4, #8]
 8000840:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000844:	f000 f8f0 	bl	8000a28 <memset>
 8000848:	4620      	mov	r0, r4
 800084a:	bd70      	pop	{r4, r5, r6, pc}

0800084c <__sinit>:
 800084c:	6983      	ldr	r3, [r0, #24]
 800084e:	b510      	push	{r4, lr}
 8000850:	4604      	mov	r4, r0
 8000852:	bb33      	cbnz	r3, 80008a2 <__sinit+0x56>
 8000854:	6483      	str	r3, [r0, #72]	; 0x48
 8000856:	64c3      	str	r3, [r0, #76]	; 0x4c
 8000858:	6503      	str	r3, [r0, #80]	; 0x50
 800085a:	4b12      	ldr	r3, [pc, #72]	; (80008a4 <__sinit+0x58>)
 800085c:	4a12      	ldr	r2, [pc, #72]	; (80008a8 <__sinit+0x5c>)
 800085e:	681b      	ldr	r3, [r3, #0]
 8000860:	6282      	str	r2, [r0, #40]	; 0x28
 8000862:	4298      	cmp	r0, r3
 8000864:	bf04      	itt	eq
 8000866:	2301      	moveq	r3, #1
 8000868:	6183      	streq	r3, [r0, #24]
 800086a:	f000 f81f 	bl	80008ac <__sfp>
 800086e:	6060      	str	r0, [r4, #4]
 8000870:	4620      	mov	r0, r4
 8000872:	f000 f81b 	bl	80008ac <__sfp>
 8000876:	60a0      	str	r0, [r4, #8]
 8000878:	4620      	mov	r0, r4
 800087a:	f000 f817 	bl	80008ac <__sfp>
 800087e:	2200      	movs	r2, #0
 8000880:	60e0      	str	r0, [r4, #12]
 8000882:	2104      	movs	r1, #4
 8000884:	6860      	ldr	r0, [r4, #4]
 8000886:	f7ff ffa7 	bl	80007d8 <std.isra.0>
 800088a:	2201      	movs	r2, #1
 800088c:	2109      	movs	r1, #9
 800088e:	68a0      	ldr	r0, [r4, #8]
 8000890:	f7ff ffa2 	bl	80007d8 <std.isra.0>
 8000894:	2202      	movs	r2, #2
 8000896:	2112      	movs	r1, #18
 8000898:	68e0      	ldr	r0, [r4, #12]
 800089a:	f7ff ff9d 	bl	80007d8 <std.isra.0>
 800089e:	2301      	movs	r3, #1
 80008a0:	61a3      	str	r3, [r4, #24]
 80008a2:	bd10      	pop	{r4, pc}
 80008a4:	08000e2c 	.word	0x08000e2c
 80008a8:	080007cd 	.word	0x080007cd

080008ac <__sfp>:
 80008ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008ae:	4b1c      	ldr	r3, [pc, #112]	; (8000920 <__sfp+0x74>)
 80008b0:	4607      	mov	r7, r0
 80008b2:	681e      	ldr	r6, [r3, #0]
 80008b4:	69b3      	ldr	r3, [r6, #24]
 80008b6:	b913      	cbnz	r3, 80008be <__sfp+0x12>
 80008b8:	4630      	mov	r0, r6
 80008ba:	f7ff ffc7 	bl	800084c <__sinit>
 80008be:	3648      	adds	r6, #72	; 0x48
 80008c0:	68b4      	ldr	r4, [r6, #8]
 80008c2:	6873      	ldr	r3, [r6, #4]
 80008c4:	3b01      	subs	r3, #1
 80008c6:	d503      	bpl.n	80008d0 <__sfp+0x24>
 80008c8:	6833      	ldr	r3, [r6, #0]
 80008ca:	b133      	cbz	r3, 80008da <__sfp+0x2e>
 80008cc:	6836      	ldr	r6, [r6, #0]
 80008ce:	e7f7      	b.n	80008c0 <__sfp+0x14>
 80008d0:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80008d4:	b16d      	cbz	r5, 80008f2 <__sfp+0x46>
 80008d6:	3468      	adds	r4, #104	; 0x68
 80008d8:	e7f4      	b.n	80008c4 <__sfp+0x18>
 80008da:	2104      	movs	r1, #4
 80008dc:	4638      	mov	r0, r7
 80008de:	f7ff ff9f 	bl	8000820 <__sfmoreglue>
 80008e2:	6030      	str	r0, [r6, #0]
 80008e4:	2800      	cmp	r0, #0
 80008e6:	d1f1      	bne.n	80008cc <__sfp+0x20>
 80008e8:	230c      	movs	r3, #12
 80008ea:	4604      	mov	r4, r0
 80008ec:	603b      	str	r3, [r7, #0]
 80008ee:	4620      	mov	r0, r4
 80008f0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80008f2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80008f6:	81e3      	strh	r3, [r4, #14]
 80008f8:	2301      	movs	r3, #1
 80008fa:	6665      	str	r5, [r4, #100]	; 0x64
 80008fc:	81a3      	strh	r3, [r4, #12]
 80008fe:	6025      	str	r5, [r4, #0]
 8000900:	60a5      	str	r5, [r4, #8]
 8000902:	6065      	str	r5, [r4, #4]
 8000904:	6125      	str	r5, [r4, #16]
 8000906:	6165      	str	r5, [r4, #20]
 8000908:	61a5      	str	r5, [r4, #24]
 800090a:	2208      	movs	r2, #8
 800090c:	4629      	mov	r1, r5
 800090e:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000912:	f000 f889 	bl	8000a28 <memset>
 8000916:	6365      	str	r5, [r4, #52]	; 0x34
 8000918:	63a5      	str	r5, [r4, #56]	; 0x38
 800091a:	64a5      	str	r5, [r4, #72]	; 0x48
 800091c:	64e5      	str	r5, [r4, #76]	; 0x4c
 800091e:	e7e6      	b.n	80008ee <__sfp+0x42>
 8000920:	08000e2c 	.word	0x08000e2c

08000924 <_fwalk_reent>:
 8000924:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000928:	4680      	mov	r8, r0
 800092a:	4689      	mov	r9, r1
 800092c:	2600      	movs	r6, #0
 800092e:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000932:	b914      	cbnz	r4, 800093a <_fwalk_reent+0x16>
 8000934:	4630      	mov	r0, r6
 8000936:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800093a:	68a5      	ldr	r5, [r4, #8]
 800093c:	6867      	ldr	r7, [r4, #4]
 800093e:	3f01      	subs	r7, #1
 8000940:	d501      	bpl.n	8000946 <_fwalk_reent+0x22>
 8000942:	6824      	ldr	r4, [r4, #0]
 8000944:	e7f5      	b.n	8000932 <_fwalk_reent+0xe>
 8000946:	89ab      	ldrh	r3, [r5, #12]
 8000948:	2b01      	cmp	r3, #1
 800094a:	d907      	bls.n	800095c <_fwalk_reent+0x38>
 800094c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000950:	3301      	adds	r3, #1
 8000952:	d003      	beq.n	800095c <_fwalk_reent+0x38>
 8000954:	4629      	mov	r1, r5
 8000956:	4640      	mov	r0, r8
 8000958:	47c8      	blx	r9
 800095a:	4306      	orrs	r6, r0
 800095c:	3568      	adds	r5, #104	; 0x68
 800095e:	e7ee      	b.n	800093e <_fwalk_reent+0x1a>

08000960 <__swhatbuf_r>:
 8000960:	b570      	push	{r4, r5, r6, lr}
 8000962:	460e      	mov	r6, r1
 8000964:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000968:	b090      	sub	sp, #64	; 0x40
 800096a:	2900      	cmp	r1, #0
 800096c:	4614      	mov	r4, r2
 800096e:	461d      	mov	r5, r3
 8000970:	da07      	bge.n	8000982 <__swhatbuf_r+0x22>
 8000972:	2300      	movs	r3, #0
 8000974:	602b      	str	r3, [r5, #0]
 8000976:	89b3      	ldrh	r3, [r6, #12]
 8000978:	061a      	lsls	r2, r3, #24
 800097a:	d410      	bmi.n	800099e <__swhatbuf_r+0x3e>
 800097c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000980:	e00e      	b.n	80009a0 <__swhatbuf_r+0x40>
 8000982:	aa01      	add	r2, sp, #4
 8000984:	f000 f978 	bl	8000c78 <_fstat_r>
 8000988:	2800      	cmp	r0, #0
 800098a:	dbf2      	blt.n	8000972 <__swhatbuf_r+0x12>
 800098c:	9a02      	ldr	r2, [sp, #8]
 800098e:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000992:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000996:	425a      	negs	r2, r3
 8000998:	415a      	adcs	r2, r3
 800099a:	602a      	str	r2, [r5, #0]
 800099c:	e7ee      	b.n	800097c <__swhatbuf_r+0x1c>
 800099e:	2340      	movs	r3, #64	; 0x40
 80009a0:	2000      	movs	r0, #0
 80009a2:	6023      	str	r3, [r4, #0]
 80009a4:	b010      	add	sp, #64	; 0x40
 80009a6:	bd70      	pop	{r4, r5, r6, pc}

080009a8 <__smakebuf_r>:
 80009a8:	898b      	ldrh	r3, [r1, #12]
 80009aa:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80009ac:	079d      	lsls	r5, r3, #30
 80009ae:	4606      	mov	r6, r0
 80009b0:	460c      	mov	r4, r1
 80009b2:	d507      	bpl.n	80009c4 <__smakebuf_r+0x1c>
 80009b4:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80009b8:	6023      	str	r3, [r4, #0]
 80009ba:	6123      	str	r3, [r4, #16]
 80009bc:	2301      	movs	r3, #1
 80009be:	6163      	str	r3, [r4, #20]
 80009c0:	b002      	add	sp, #8
 80009c2:	bd70      	pop	{r4, r5, r6, pc}
 80009c4:	ab01      	add	r3, sp, #4
 80009c6:	466a      	mov	r2, sp
 80009c8:	f7ff ffca 	bl	8000960 <__swhatbuf_r>
 80009cc:	9900      	ldr	r1, [sp, #0]
 80009ce:	4605      	mov	r5, r0
 80009d0:	4630      	mov	r0, r6
 80009d2:	f000 f87d 	bl	8000ad0 <_malloc_r>
 80009d6:	b948      	cbnz	r0, 80009ec <__smakebuf_r+0x44>
 80009d8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80009dc:	059a      	lsls	r2, r3, #22
 80009de:	d4ef      	bmi.n	80009c0 <__smakebuf_r+0x18>
 80009e0:	f023 0303 	bic.w	r3, r3, #3
 80009e4:	f043 0302 	orr.w	r3, r3, #2
 80009e8:	81a3      	strh	r3, [r4, #12]
 80009ea:	e7e3      	b.n	80009b4 <__smakebuf_r+0xc>
 80009ec:	4b0d      	ldr	r3, [pc, #52]	; (8000a24 <__smakebuf_r+0x7c>)
 80009ee:	62b3      	str	r3, [r6, #40]	; 0x28
 80009f0:	89a3      	ldrh	r3, [r4, #12]
 80009f2:	6020      	str	r0, [r4, #0]
 80009f4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80009f8:	81a3      	strh	r3, [r4, #12]
 80009fa:	9b00      	ldr	r3, [sp, #0]
 80009fc:	6120      	str	r0, [r4, #16]
 80009fe:	6163      	str	r3, [r4, #20]
 8000a00:	9b01      	ldr	r3, [sp, #4]
 8000a02:	b15b      	cbz	r3, 8000a1c <__smakebuf_r+0x74>
 8000a04:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000a08:	4630      	mov	r0, r6
 8000a0a:	f000 f947 	bl	8000c9c <_isatty_r>
 8000a0e:	b128      	cbz	r0, 8000a1c <__smakebuf_r+0x74>
 8000a10:	89a3      	ldrh	r3, [r4, #12]
 8000a12:	f023 0303 	bic.w	r3, r3, #3
 8000a16:	f043 0301 	orr.w	r3, r3, #1
 8000a1a:	81a3      	strh	r3, [r4, #12]
 8000a1c:	89a3      	ldrh	r3, [r4, #12]
 8000a1e:	431d      	orrs	r5, r3
 8000a20:	81a5      	strh	r5, [r4, #12]
 8000a22:	e7cd      	b.n	80009c0 <__smakebuf_r+0x18>
 8000a24:	080007cd 	.word	0x080007cd

08000a28 <memset>:
 8000a28:	4603      	mov	r3, r0
 8000a2a:	4402      	add	r2, r0
 8000a2c:	4293      	cmp	r3, r2
 8000a2e:	d100      	bne.n	8000a32 <memset+0xa>
 8000a30:	4770      	bx	lr
 8000a32:	f803 1b01 	strb.w	r1, [r3], #1
 8000a36:	e7f9      	b.n	8000a2c <memset+0x4>

08000a38 <_free_r>:
 8000a38:	b538      	push	{r3, r4, r5, lr}
 8000a3a:	4605      	mov	r5, r0
 8000a3c:	2900      	cmp	r1, #0
 8000a3e:	d043      	beq.n	8000ac8 <_free_r+0x90>
 8000a40:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000a44:	1f0c      	subs	r4, r1, #4
 8000a46:	2b00      	cmp	r3, #0
 8000a48:	bfb8      	it	lt
 8000a4a:	18e4      	addlt	r4, r4, r3
 8000a4c:	f000 f948 	bl	8000ce0 <__malloc_lock>
 8000a50:	4a1e      	ldr	r2, [pc, #120]	; (8000acc <_free_r+0x94>)
 8000a52:	6813      	ldr	r3, [r2, #0]
 8000a54:	4610      	mov	r0, r2
 8000a56:	b933      	cbnz	r3, 8000a66 <_free_r+0x2e>
 8000a58:	6063      	str	r3, [r4, #4]
 8000a5a:	6014      	str	r4, [r2, #0]
 8000a5c:	4628      	mov	r0, r5
 8000a5e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000a62:	f000 b93e 	b.w	8000ce2 <__malloc_unlock>
 8000a66:	42a3      	cmp	r3, r4
 8000a68:	d90b      	bls.n	8000a82 <_free_r+0x4a>
 8000a6a:	6821      	ldr	r1, [r4, #0]
 8000a6c:	1862      	adds	r2, r4, r1
 8000a6e:	4293      	cmp	r3, r2
 8000a70:	bf01      	itttt	eq
 8000a72:	681a      	ldreq	r2, [r3, #0]
 8000a74:	685b      	ldreq	r3, [r3, #4]
 8000a76:	1852      	addeq	r2, r2, r1
 8000a78:	6022      	streq	r2, [r4, #0]
 8000a7a:	6063      	str	r3, [r4, #4]
 8000a7c:	6004      	str	r4, [r0, #0]
 8000a7e:	e7ed      	b.n	8000a5c <_free_r+0x24>
 8000a80:	4613      	mov	r3, r2
 8000a82:	685a      	ldr	r2, [r3, #4]
 8000a84:	b10a      	cbz	r2, 8000a8a <_free_r+0x52>
 8000a86:	42a2      	cmp	r2, r4
 8000a88:	d9fa      	bls.n	8000a80 <_free_r+0x48>
 8000a8a:	6819      	ldr	r1, [r3, #0]
 8000a8c:	1858      	adds	r0, r3, r1
 8000a8e:	42a0      	cmp	r0, r4
 8000a90:	d10b      	bne.n	8000aaa <_free_r+0x72>
 8000a92:	6820      	ldr	r0, [r4, #0]
 8000a94:	4401      	add	r1, r0
 8000a96:	1858      	adds	r0, r3, r1
 8000a98:	4282      	cmp	r2, r0
 8000a9a:	6019      	str	r1, [r3, #0]
 8000a9c:	d1de      	bne.n	8000a5c <_free_r+0x24>
 8000a9e:	6810      	ldr	r0, [r2, #0]
 8000aa0:	6852      	ldr	r2, [r2, #4]
 8000aa2:	4401      	add	r1, r0
 8000aa4:	6019      	str	r1, [r3, #0]
 8000aa6:	605a      	str	r2, [r3, #4]
 8000aa8:	e7d8      	b.n	8000a5c <_free_r+0x24>
 8000aaa:	d902      	bls.n	8000ab2 <_free_r+0x7a>
 8000aac:	230c      	movs	r3, #12
 8000aae:	602b      	str	r3, [r5, #0]
 8000ab0:	e7d4      	b.n	8000a5c <_free_r+0x24>
 8000ab2:	6820      	ldr	r0, [r4, #0]
 8000ab4:	1821      	adds	r1, r4, r0
 8000ab6:	428a      	cmp	r2, r1
 8000ab8:	bf01      	itttt	eq
 8000aba:	6811      	ldreq	r1, [r2, #0]
 8000abc:	6852      	ldreq	r2, [r2, #4]
 8000abe:	1809      	addeq	r1, r1, r0
 8000ac0:	6021      	streq	r1, [r4, #0]
 8000ac2:	6062      	str	r2, [r4, #4]
 8000ac4:	605c      	str	r4, [r3, #4]
 8000ac6:	e7c9      	b.n	8000a5c <_free_r+0x24>
 8000ac8:	bd38      	pop	{r3, r4, r5, pc}
 8000aca:	bf00      	nop
 8000acc:	20000084 	.word	0x20000084

08000ad0 <_malloc_r>:
 8000ad0:	b570      	push	{r4, r5, r6, lr}
 8000ad2:	1ccd      	adds	r5, r1, #3
 8000ad4:	f025 0503 	bic.w	r5, r5, #3
 8000ad8:	3508      	adds	r5, #8
 8000ada:	2d0c      	cmp	r5, #12
 8000adc:	bf38      	it	cc
 8000ade:	250c      	movcc	r5, #12
 8000ae0:	2d00      	cmp	r5, #0
 8000ae2:	4606      	mov	r6, r0
 8000ae4:	db01      	blt.n	8000aea <_malloc_r+0x1a>
 8000ae6:	42a9      	cmp	r1, r5
 8000ae8:	d903      	bls.n	8000af2 <_malloc_r+0x22>
 8000aea:	230c      	movs	r3, #12
 8000aec:	6033      	str	r3, [r6, #0]
 8000aee:	2000      	movs	r0, #0
 8000af0:	bd70      	pop	{r4, r5, r6, pc}
 8000af2:	f000 f8f5 	bl	8000ce0 <__malloc_lock>
 8000af6:	4a23      	ldr	r2, [pc, #140]	; (8000b84 <_malloc_r+0xb4>)
 8000af8:	6814      	ldr	r4, [r2, #0]
 8000afa:	4621      	mov	r1, r4
 8000afc:	b991      	cbnz	r1, 8000b24 <_malloc_r+0x54>
 8000afe:	4c22      	ldr	r4, [pc, #136]	; (8000b88 <_malloc_r+0xb8>)
 8000b00:	6823      	ldr	r3, [r4, #0]
 8000b02:	b91b      	cbnz	r3, 8000b0c <_malloc_r+0x3c>
 8000b04:	4630      	mov	r0, r6
 8000b06:	f000 f841 	bl	8000b8c <_sbrk_r>
 8000b0a:	6020      	str	r0, [r4, #0]
 8000b0c:	4629      	mov	r1, r5
 8000b0e:	4630      	mov	r0, r6
 8000b10:	f000 f83c 	bl	8000b8c <_sbrk_r>
 8000b14:	1c43      	adds	r3, r0, #1
 8000b16:	d126      	bne.n	8000b66 <_malloc_r+0x96>
 8000b18:	230c      	movs	r3, #12
 8000b1a:	4630      	mov	r0, r6
 8000b1c:	6033      	str	r3, [r6, #0]
 8000b1e:	f000 f8e0 	bl	8000ce2 <__malloc_unlock>
 8000b22:	e7e4      	b.n	8000aee <_malloc_r+0x1e>
 8000b24:	680b      	ldr	r3, [r1, #0]
 8000b26:	1b5b      	subs	r3, r3, r5
 8000b28:	d41a      	bmi.n	8000b60 <_malloc_r+0x90>
 8000b2a:	2b0b      	cmp	r3, #11
 8000b2c:	d90f      	bls.n	8000b4e <_malloc_r+0x7e>
 8000b2e:	600b      	str	r3, [r1, #0]
 8000b30:	18cc      	adds	r4, r1, r3
 8000b32:	50cd      	str	r5, [r1, r3]
 8000b34:	4630      	mov	r0, r6
 8000b36:	f000 f8d4 	bl	8000ce2 <__malloc_unlock>
 8000b3a:	f104 000b 	add.w	r0, r4, #11
 8000b3e:	1d23      	adds	r3, r4, #4
 8000b40:	f020 0007 	bic.w	r0, r0, #7
 8000b44:	1ac3      	subs	r3, r0, r3
 8000b46:	d01b      	beq.n	8000b80 <_malloc_r+0xb0>
 8000b48:	425a      	negs	r2, r3
 8000b4a:	50e2      	str	r2, [r4, r3]
 8000b4c:	bd70      	pop	{r4, r5, r6, pc}
 8000b4e:	428c      	cmp	r4, r1
 8000b50:	bf0b      	itete	eq
 8000b52:	6863      	ldreq	r3, [r4, #4]
 8000b54:	684b      	ldrne	r3, [r1, #4]
 8000b56:	6013      	streq	r3, [r2, #0]
 8000b58:	6063      	strne	r3, [r4, #4]
 8000b5a:	bf18      	it	ne
 8000b5c:	460c      	movne	r4, r1
 8000b5e:	e7e9      	b.n	8000b34 <_malloc_r+0x64>
 8000b60:	460c      	mov	r4, r1
 8000b62:	6849      	ldr	r1, [r1, #4]
 8000b64:	e7ca      	b.n	8000afc <_malloc_r+0x2c>
 8000b66:	1cc4      	adds	r4, r0, #3
 8000b68:	f024 0403 	bic.w	r4, r4, #3
 8000b6c:	42a0      	cmp	r0, r4
 8000b6e:	d005      	beq.n	8000b7c <_malloc_r+0xac>
 8000b70:	1a21      	subs	r1, r4, r0
 8000b72:	4630      	mov	r0, r6
 8000b74:	f000 f80a 	bl	8000b8c <_sbrk_r>
 8000b78:	3001      	adds	r0, #1
 8000b7a:	d0cd      	beq.n	8000b18 <_malloc_r+0x48>
 8000b7c:	6025      	str	r5, [r4, #0]
 8000b7e:	e7d9      	b.n	8000b34 <_malloc_r+0x64>
 8000b80:	bd70      	pop	{r4, r5, r6, pc}
 8000b82:	bf00      	nop
 8000b84:	20000084 	.word	0x20000084
 8000b88:	20000088 	.word	0x20000088

08000b8c <_sbrk_r>:
 8000b8c:	b538      	push	{r3, r4, r5, lr}
 8000b8e:	2300      	movs	r3, #0
 8000b90:	4c05      	ldr	r4, [pc, #20]	; (8000ba8 <_sbrk_r+0x1c>)
 8000b92:	4605      	mov	r5, r0
 8000b94:	4608      	mov	r0, r1
 8000b96:	6023      	str	r3, [r4, #0]
 8000b98:	f000 f8de 	bl	8000d58 <_sbrk>
 8000b9c:	1c43      	adds	r3, r0, #1
 8000b9e:	d102      	bne.n	8000ba6 <_sbrk_r+0x1a>
 8000ba0:	6823      	ldr	r3, [r4, #0]
 8000ba2:	b103      	cbz	r3, 8000ba6 <_sbrk_r+0x1a>
 8000ba4:	602b      	str	r3, [r5, #0]
 8000ba6:	bd38      	pop	{r3, r4, r5, pc}
 8000ba8:	20000090 	.word	0x20000090

08000bac <__sread>:
 8000bac:	b510      	push	{r4, lr}
 8000bae:	460c      	mov	r4, r1
 8000bb0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000bb4:	f000 f896 	bl	8000ce4 <_read_r>
 8000bb8:	2800      	cmp	r0, #0
 8000bba:	bfab      	itete	ge
 8000bbc:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000bbe:	89a3      	ldrhlt	r3, [r4, #12]
 8000bc0:	181b      	addge	r3, r3, r0
 8000bc2:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000bc6:	bfac      	ite	ge
 8000bc8:	6563      	strge	r3, [r4, #84]	; 0x54
 8000bca:	81a3      	strhlt	r3, [r4, #12]
 8000bcc:	bd10      	pop	{r4, pc}

08000bce <__swrite>:
 8000bce:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000bd2:	461f      	mov	r7, r3
 8000bd4:	898b      	ldrh	r3, [r1, #12]
 8000bd6:	4605      	mov	r5, r0
 8000bd8:	05db      	lsls	r3, r3, #23
 8000bda:	460c      	mov	r4, r1
 8000bdc:	4616      	mov	r6, r2
 8000bde:	d505      	bpl.n	8000bec <__swrite+0x1e>
 8000be0:	2302      	movs	r3, #2
 8000be2:	2200      	movs	r2, #0
 8000be4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000be8:	f000 f868 	bl	8000cbc <_lseek_r>
 8000bec:	89a3      	ldrh	r3, [r4, #12]
 8000bee:	4632      	mov	r2, r6
 8000bf0:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000bf4:	81a3      	strh	r3, [r4, #12]
 8000bf6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000bfa:	463b      	mov	r3, r7
 8000bfc:	4628      	mov	r0, r5
 8000bfe:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000c02:	f000 b817 	b.w	8000c34 <_write_r>

08000c06 <__sseek>:
 8000c06:	b510      	push	{r4, lr}
 8000c08:	460c      	mov	r4, r1
 8000c0a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c0e:	f000 f855 	bl	8000cbc <_lseek_r>
 8000c12:	1c43      	adds	r3, r0, #1
 8000c14:	89a3      	ldrh	r3, [r4, #12]
 8000c16:	bf15      	itete	ne
 8000c18:	6560      	strne	r0, [r4, #84]	; 0x54
 8000c1a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000c1e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000c22:	81a3      	strheq	r3, [r4, #12]
 8000c24:	bf18      	it	ne
 8000c26:	81a3      	strhne	r3, [r4, #12]
 8000c28:	bd10      	pop	{r4, pc}

08000c2a <__sclose>:
 8000c2a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c2e:	f000 b813 	b.w	8000c58 <_close_r>
	...

08000c34 <_write_r>:
 8000c34:	b538      	push	{r3, r4, r5, lr}
 8000c36:	4605      	mov	r5, r0
 8000c38:	4608      	mov	r0, r1
 8000c3a:	4611      	mov	r1, r2
 8000c3c:	2200      	movs	r2, #0
 8000c3e:	4c05      	ldr	r4, [pc, #20]	; (8000c54 <_write_r+0x20>)
 8000c40:	6022      	str	r2, [r4, #0]
 8000c42:	461a      	mov	r2, r3
 8000c44:	f000 f896 	bl	8000d74 <_write>
 8000c48:	1c43      	adds	r3, r0, #1
 8000c4a:	d102      	bne.n	8000c52 <_write_r+0x1e>
 8000c4c:	6823      	ldr	r3, [r4, #0]
 8000c4e:	b103      	cbz	r3, 8000c52 <_write_r+0x1e>
 8000c50:	602b      	str	r3, [r5, #0]
 8000c52:	bd38      	pop	{r3, r4, r5, pc}
 8000c54:	20000090 	.word	0x20000090

08000c58 <_close_r>:
 8000c58:	b538      	push	{r3, r4, r5, lr}
 8000c5a:	2300      	movs	r3, #0
 8000c5c:	4c05      	ldr	r4, [pc, #20]	; (8000c74 <_close_r+0x1c>)
 8000c5e:	4605      	mov	r5, r0
 8000c60:	4608      	mov	r0, r1
 8000c62:	6023      	str	r3, [r4, #0]
 8000c64:	f000 f850 	bl	8000d08 <_close>
 8000c68:	1c43      	adds	r3, r0, #1
 8000c6a:	d102      	bne.n	8000c72 <_close_r+0x1a>
 8000c6c:	6823      	ldr	r3, [r4, #0]
 8000c6e:	b103      	cbz	r3, 8000c72 <_close_r+0x1a>
 8000c70:	602b      	str	r3, [r5, #0]
 8000c72:	bd38      	pop	{r3, r4, r5, pc}
 8000c74:	20000090 	.word	0x20000090

08000c78 <_fstat_r>:
 8000c78:	b538      	push	{r3, r4, r5, lr}
 8000c7a:	2300      	movs	r3, #0
 8000c7c:	4c06      	ldr	r4, [pc, #24]	; (8000c98 <_fstat_r+0x20>)
 8000c7e:	4605      	mov	r5, r0
 8000c80:	4608      	mov	r0, r1
 8000c82:	4611      	mov	r1, r2
 8000c84:	6023      	str	r3, [r4, #0]
 8000c86:	f000 f847 	bl	8000d18 <_fstat>
 8000c8a:	1c43      	adds	r3, r0, #1
 8000c8c:	d102      	bne.n	8000c94 <_fstat_r+0x1c>
 8000c8e:	6823      	ldr	r3, [r4, #0]
 8000c90:	b103      	cbz	r3, 8000c94 <_fstat_r+0x1c>
 8000c92:	602b      	str	r3, [r5, #0]
 8000c94:	bd38      	pop	{r3, r4, r5, pc}
 8000c96:	bf00      	nop
 8000c98:	20000090 	.word	0x20000090

08000c9c <_isatty_r>:
 8000c9c:	b538      	push	{r3, r4, r5, lr}
 8000c9e:	2300      	movs	r3, #0
 8000ca0:	4c05      	ldr	r4, [pc, #20]	; (8000cb8 <_isatty_r+0x1c>)
 8000ca2:	4605      	mov	r5, r0
 8000ca4:	4608      	mov	r0, r1
 8000ca6:	6023      	str	r3, [r4, #0]
 8000ca8:	f000 f83e 	bl	8000d28 <_isatty>
 8000cac:	1c43      	adds	r3, r0, #1
 8000cae:	d102      	bne.n	8000cb6 <_isatty_r+0x1a>
 8000cb0:	6823      	ldr	r3, [r4, #0]
 8000cb2:	b103      	cbz	r3, 8000cb6 <_isatty_r+0x1a>
 8000cb4:	602b      	str	r3, [r5, #0]
 8000cb6:	bd38      	pop	{r3, r4, r5, pc}
 8000cb8:	20000090 	.word	0x20000090

08000cbc <_lseek_r>:
 8000cbc:	b538      	push	{r3, r4, r5, lr}
 8000cbe:	4605      	mov	r5, r0
 8000cc0:	4608      	mov	r0, r1
 8000cc2:	4611      	mov	r1, r2
 8000cc4:	2200      	movs	r2, #0
 8000cc6:	4c05      	ldr	r4, [pc, #20]	; (8000cdc <_lseek_r+0x20>)
 8000cc8:	6022      	str	r2, [r4, #0]
 8000cca:	461a      	mov	r2, r3
 8000ccc:	f000 f834 	bl	8000d38 <_lseek>
 8000cd0:	1c43      	adds	r3, r0, #1
 8000cd2:	d102      	bne.n	8000cda <_lseek_r+0x1e>
 8000cd4:	6823      	ldr	r3, [r4, #0]
 8000cd6:	b103      	cbz	r3, 8000cda <_lseek_r+0x1e>
 8000cd8:	602b      	str	r3, [r5, #0]
 8000cda:	bd38      	pop	{r3, r4, r5, pc}
 8000cdc:	20000090 	.word	0x20000090

08000ce0 <__malloc_lock>:
 8000ce0:	4770      	bx	lr

08000ce2 <__malloc_unlock>:
 8000ce2:	4770      	bx	lr

08000ce4 <_read_r>:
 8000ce4:	b538      	push	{r3, r4, r5, lr}
 8000ce6:	4605      	mov	r5, r0
 8000ce8:	4608      	mov	r0, r1
 8000cea:	4611      	mov	r1, r2
 8000cec:	2200      	movs	r2, #0
 8000cee:	4c05      	ldr	r4, [pc, #20]	; (8000d04 <_read_r+0x20>)
 8000cf0:	6022      	str	r2, [r4, #0]
 8000cf2:	461a      	mov	r2, r3
 8000cf4:	f000 f828 	bl	8000d48 <_read>
 8000cf8:	1c43      	adds	r3, r0, #1
 8000cfa:	d102      	bne.n	8000d02 <_read_r+0x1e>
 8000cfc:	6823      	ldr	r3, [r4, #0]
 8000cfe:	b103      	cbz	r3, 8000d02 <_read_r+0x1e>
 8000d00:	602b      	str	r3, [r5, #0]
 8000d02:	bd38      	pop	{r3, r4, r5, pc}
 8000d04:	20000090 	.word	0x20000090

08000d08 <_close>:
 8000d08:	2258      	movs	r2, #88	; 0x58
 8000d0a:	4b02      	ldr	r3, [pc, #8]	; (8000d14 <_close+0xc>)
 8000d0c:	f04f 30ff 	mov.w	r0, #4294967295
 8000d10:	601a      	str	r2, [r3, #0]
 8000d12:	4770      	bx	lr
 8000d14:	20000090 	.word	0x20000090

08000d18 <_fstat>:
 8000d18:	2258      	movs	r2, #88	; 0x58
 8000d1a:	4b02      	ldr	r3, [pc, #8]	; (8000d24 <_fstat+0xc>)
 8000d1c:	f04f 30ff 	mov.w	r0, #4294967295
 8000d20:	601a      	str	r2, [r3, #0]
 8000d22:	4770      	bx	lr
 8000d24:	20000090 	.word	0x20000090

08000d28 <_isatty>:
 8000d28:	2258      	movs	r2, #88	; 0x58
 8000d2a:	4b02      	ldr	r3, [pc, #8]	; (8000d34 <_isatty+0xc>)
 8000d2c:	2000      	movs	r0, #0
 8000d2e:	601a      	str	r2, [r3, #0]
 8000d30:	4770      	bx	lr
 8000d32:	bf00      	nop
 8000d34:	20000090 	.word	0x20000090

08000d38 <_lseek>:
 8000d38:	2258      	movs	r2, #88	; 0x58
 8000d3a:	4b02      	ldr	r3, [pc, #8]	; (8000d44 <_lseek+0xc>)
 8000d3c:	f04f 30ff 	mov.w	r0, #4294967295
 8000d40:	601a      	str	r2, [r3, #0]
 8000d42:	4770      	bx	lr
 8000d44:	20000090 	.word	0x20000090

08000d48 <_read>:
 8000d48:	2258      	movs	r2, #88	; 0x58
 8000d4a:	4b02      	ldr	r3, [pc, #8]	; (8000d54 <_read+0xc>)
 8000d4c:	f04f 30ff 	mov.w	r0, #4294967295
 8000d50:	601a      	str	r2, [r3, #0]
 8000d52:	4770      	bx	lr
 8000d54:	20000090 	.word	0x20000090

08000d58 <_sbrk>:
 8000d58:	4b04      	ldr	r3, [pc, #16]	; (8000d6c <_sbrk+0x14>)
 8000d5a:	4602      	mov	r2, r0
 8000d5c:	6819      	ldr	r1, [r3, #0]
 8000d5e:	b909      	cbnz	r1, 8000d64 <_sbrk+0xc>
 8000d60:	4903      	ldr	r1, [pc, #12]	; (8000d70 <_sbrk+0x18>)
 8000d62:	6019      	str	r1, [r3, #0]
 8000d64:	6818      	ldr	r0, [r3, #0]
 8000d66:	4402      	add	r2, r0
 8000d68:	601a      	str	r2, [r3, #0]
 8000d6a:	4770      	bx	lr
 8000d6c:	2000008c 	.word	0x2000008c
 8000d70:	20000094 	.word	0x20000094

08000d74 <_write>:
 8000d74:	2258      	movs	r2, #88	; 0x58
 8000d76:	4b02      	ldr	r3, [pc, #8]	; (8000d80 <_write+0xc>)
 8000d78:	f04f 30ff 	mov.w	r0, #4294967295
 8000d7c:	601a      	str	r2, [r3, #0]
 8000d7e:	4770      	bx	lr
 8000d80:	20000090 	.word	0x20000090

08000d84 <_init>:
 8000d84:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d86:	bf00      	nop
 8000d88:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000d8a:	bc08      	pop	{r3}
 8000d8c:	469e      	mov	lr, r3
 8000d8e:	4770      	bx	lr

08000d90 <_fini>:
 8000d90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d92:	bf00      	nop
 8000d94:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000d96:	bc08      	pop	{r3}
 8000d98:	469e      	mov	lr, r3
 8000d9a:	4770      	bx	lr


103RB_5.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000cbc  0800010c  0800010c  0001010c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000094  08000dc8  08000dc8  00010dc8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .init_array   00000004  08000e5c  08000e5c  00010e5c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .fini_array   00000004  08000e60  08000e60  00010e60  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .data         00000068  20000000  08000e64  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .bss          0000002c  20000068  08000ecc  00020068  2**2
                  ALLOC
  7 ._user_heap_stack 00000600  20000094  08000ecc  00020094  2**0
                  ALLOC
  8 .ARM.attributes 00000029  00000000  00000000  00020068  2**0
                  CONTENTS, READONLY
  9 .debug_line   000007b0  00000000  00000000  00020091  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   00001c06  00000000  00000000  00020841  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 00000538  00000000  00000000  00022447  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_aranges 00000088  00000000  00000000  00022980  2**3
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000020  00000000  00000000  00022a08  2**3
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00000193  00000000  00000000  00022a28  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    000007a3  00000000  00000000  00022bbb  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .comment      0000007c  00000000  00000000  0002335e  2**0
                  CONTENTS, READONLY
 17 .debug_frame  00000830  00000000  00000000  000233dc  2**2
                  CONTENTS, READONLY, DEBUGGING
 18 .stab         0000009c  00000000  00000000  00023c0c  2**2
                  CONTENTS, READONLY, DEBUGGING
 19 .stabstr      0000014d  00000000  00000000  00023ca8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	; (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	; (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	; (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	20000068 	.word	0x20000068
 8000128:	00000000 	.word	0x00000000
 800012c:	08000db0 	.word	0x08000db0

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	; (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	; (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	; (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	2000006c 	.word	0x2000006c
 8000148:	08000db0 	.word	0x08000db0

0800014c <SystemInit>:
  */
void SystemInit (void)
{
  /* Reset the RCC clock configuration to the default reset state(for debug purpose) */
  /* Set HSION bit */
  RCC->CR |= 0x00000001U;
 800014c:	4b0f      	ldr	r3, [pc, #60]	; (800018c <SystemInit+0x40>)
 800014e:	681a      	ldr	r2, [r3, #0]
 8000150:	f042 0201 	orr.w	r2, r2, #1
 8000154:	601a      	str	r2, [r3, #0]

  /* Reset SW, HPRE, PPRE1, PPRE2, ADCPRE and MCO bits */
#if !defined(STM32F105xC) && !defined(STM32F107xC)
  RCC->CFGR &= 0xF8FF0000U;
 8000156:	6859      	ldr	r1, [r3, #4]
 8000158:	4a0d      	ldr	r2, [pc, #52]	; (8000190 <SystemInit+0x44>)
 800015a:	400a      	ands	r2, r1
 800015c:	605a      	str	r2, [r3, #4]
#else
  RCC->CFGR &= 0xF0FF0000U;
#endif /* STM32F105xC */   
  
  /* Reset HSEON, CSSON and PLLON bits */
  RCC->CR &= 0xFEF6FFFFU;
 800015e:	681a      	ldr	r2, [r3, #0]
 8000160:	f022 7284 	bic.w	r2, r2, #17301504	; 0x1080000
 8000164:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8000168:	601a      	str	r2, [r3, #0]

  /* Reset HSEBYP bit */
  RCC->CR &= 0xFFFBFFFFU;
 800016a:	681a      	ldr	r2, [r3, #0]
 800016c:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8000170:	601a      	str	r2, [r3, #0]

  /* Reset PLLSRC, PLLXTPRE, PLLMUL and USBPRE/OTGFSPRE bits */
  RCC->CFGR &= 0xFF80FFFFU;
 8000172:	685a      	ldr	r2, [r3, #4]
 8000174:	f422 02fe 	bic.w	r2, r2, #8323072	; 0x7f0000
 8000178:	605a      	str	r2, [r3, #4]

  /* Reset CFGR2 register */
  RCC->CFGR2 = 0x00000000U;      
#else
  /* Disable all interrupts and clear pending bits  */
  RCC->CIR = 0x009F0000U;
 800017a:	f44f 021f 	mov.w	r2, #10420224	; 0x9f0000
 800017e:	609a      	str	r2, [r3, #8]
#endif 

#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH. */
 8000180:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8000184:	4b03      	ldr	r3, [pc, #12]	; (8000194 <SystemInit+0x48>)
 8000186:	609a      	str	r2, [r3, #8]
 8000188:	4770      	bx	lr
 800018a:	bf00      	nop
 800018c:	40021000 	.word	0x40021000
 8000190:	f8ff0000 	.word	0xf8ff0000
 8000194:	e000ed00 	.word	0xe000ed00

08000198 <SystemCoreClockUpdate>:
#if defined(STM32F100xB) || defined(STM32F100xE)
  uint32_t prediv1factor = 0U;
#endif /* STM32F100xB or STM32F100xE */
    
  /* Get SYSCLK source -------------------------------------------------------*/
  tmp = RCC->CFGR & RCC_CFGR_SWS;
 8000198:	4b1f      	ldr	r3, [pc, #124]	; (8000218 <SystemCoreClockUpdate+0x80>)
 800019a:	685b      	ldr	r3, [r3, #4]
 800019c:	f003 030c 	and.w	r3, r3, #12
  
  switch (tmp)
 80001a0:	2b04      	cmp	r3, #4
 80001a2:	d014      	beq.n	80001ce <SystemCoreClockUpdate+0x36>
 80001a4:	2b08      	cmp	r3, #8
 80001a6:	d016      	beq.n	80001d6 <SystemCoreClockUpdate+0x3e>
 80001a8:	b11b      	cbz	r3, 80001b2 <SystemCoreClockUpdate+0x1a>
      }
#endif /* STM32F105xC */ 
      break;

    default:
      SystemCoreClock = HSI_VALUE;
 80001aa:	4a1c      	ldr	r2, [pc, #112]	; (800021c <SystemCoreClockUpdate+0x84>)
 80001ac:	4b1c      	ldr	r3, [pc, #112]	; (8000220 <SystemCoreClockUpdate+0x88>)
 80001ae:	601a      	str	r2, [r3, #0]
      break;
 80001b0:	e002      	b.n	80001b8 <SystemCoreClockUpdate+0x20>
      SystemCoreClock = HSI_VALUE;
 80001b2:	4a1a      	ldr	r2, [pc, #104]	; (800021c <SystemCoreClockUpdate+0x84>)
 80001b4:	4b1a      	ldr	r3, [pc, #104]	; (8000220 <SystemCoreClockUpdate+0x88>)
 80001b6:	601a      	str	r2, [r3, #0]
  }
  
  /* Compute HCLK clock frequency ----------------*/
  /* Get HCLK prescaler */
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4U)];
 80001b8:	4b17      	ldr	r3, [pc, #92]	; (8000218 <SystemCoreClockUpdate+0x80>)
 80001ba:	685b      	ldr	r3, [r3, #4]
 80001bc:	f3c3 1303 	ubfx	r3, r3, #4, #4
 80001c0:	4a18      	ldr	r2, [pc, #96]	; (8000224 <SystemCoreClockUpdate+0x8c>)
 80001c2:	5cd1      	ldrb	r1, [r2, r3]
  /* HCLK clock frequency */
  SystemCoreClock >>= tmp;  
 80001c4:	4a16      	ldr	r2, [pc, #88]	; (8000220 <SystemCoreClockUpdate+0x88>)
 80001c6:	6813      	ldr	r3, [r2, #0]
 80001c8:	40cb      	lsrs	r3, r1
 80001ca:	6013      	str	r3, [r2, #0]
 80001cc:	4770      	bx	lr
      SystemCoreClock = HSE_VALUE;
 80001ce:	4a13      	ldr	r2, [pc, #76]	; (800021c <SystemCoreClockUpdate+0x84>)
 80001d0:	4b13      	ldr	r3, [pc, #76]	; (8000220 <SystemCoreClockUpdate+0x88>)
 80001d2:	601a      	str	r2, [r3, #0]
      break;
 80001d4:	e7f0      	b.n	80001b8 <SystemCoreClockUpdate+0x20>
      pllmull = RCC->CFGR & RCC_CFGR_PLLMULL;
 80001d6:	4a10      	ldr	r2, [pc, #64]	; (8000218 <SystemCoreClockUpdate+0x80>)
 80001d8:	6853      	ldr	r3, [r2, #4]
      pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 80001da:	6852      	ldr	r2, [r2, #4]
      pllmull = ( pllmull >> 18U) + 2U;
 80001dc:	f3c3 4383 	ubfx	r3, r3, #18, #4
 80001e0:	3302      	adds	r3, #2
      if (pllsource == 0x00U)
 80001e2:	f412 3f80 	tst.w	r2, #65536	; 0x10000
 80001e6:	d00a      	beq.n	80001fe <SystemCoreClockUpdate+0x66>
        if ((RCC->CFGR & RCC_CFGR_PLLXTPRE) != (uint32_t)RESET)
 80001e8:	4a0b      	ldr	r2, [pc, #44]	; (8000218 <SystemCoreClockUpdate+0x80>)
 80001ea:	6852      	ldr	r2, [r2, #4]
 80001ec:	f412 3f00 	tst.w	r2, #131072	; 0x20000
 80001f0:	d00b      	beq.n	800020a <SystemCoreClockUpdate+0x72>
          SystemCoreClock = (HSE_VALUE >> 1U) * pllmull;
 80001f2:	4a0d      	ldr	r2, [pc, #52]	; (8000228 <SystemCoreClockUpdate+0x90>)
 80001f4:	fb02 f303 	mul.w	r3, r2, r3
 80001f8:	4a09      	ldr	r2, [pc, #36]	; (8000220 <SystemCoreClockUpdate+0x88>)
 80001fa:	6013      	str	r3, [r2, #0]
 80001fc:	e7dc      	b.n	80001b8 <SystemCoreClockUpdate+0x20>
        SystemCoreClock = (HSI_VALUE >> 1U) * pllmull;
 80001fe:	4a0a      	ldr	r2, [pc, #40]	; (8000228 <SystemCoreClockUpdate+0x90>)
 8000200:	fb02 f303 	mul.w	r3, r2, r3
 8000204:	4a06      	ldr	r2, [pc, #24]	; (8000220 <SystemCoreClockUpdate+0x88>)
 8000206:	6013      	str	r3, [r2, #0]
 8000208:	e7d6      	b.n	80001b8 <SystemCoreClockUpdate+0x20>
          SystemCoreClock = HSE_VALUE * pllmull;
 800020a:	4a04      	ldr	r2, [pc, #16]	; (800021c <SystemCoreClockUpdate+0x84>)
 800020c:	fb02 f303 	mul.w	r3, r2, r3
 8000210:	4a03      	ldr	r2, [pc, #12]	; (8000220 <SystemCoreClockUpdate+0x88>)
 8000212:	6013      	str	r3, [r2, #0]
 8000214:	e7d0      	b.n	80001b8 <SystemCoreClockUpdate+0x20>
 8000216:	bf00      	nop
 8000218:	40021000 	.word	0x40021000
 800021c:	007a1200 	.word	0x007a1200
 8000220:	20000000 	.word	0x20000000
 8000224:	08000dc8 	.word	0x08000dc8
 8000228:	003d0900 	.word	0x003d0900

0800022c <RCC_Config>:


void RCC_Config(void)
{

	RCC->CR |= 0x1;
 800022c:	4a08      	ldr	r2, [pc, #32]	; (8000250 <RCC_Config+0x24>)
 800022e:	6813      	ldr	r3, [r2, #0]
 8000230:	f043 0301 	orr.w	r3, r3, #1
 8000234:	6013      	str	r3, [r2, #0]
	while(!(RCC->CR&0x2));
 8000236:	4b06      	ldr	r3, [pc, #24]	; (8000250 <RCC_Config+0x24>)
 8000238:	681b      	ldr	r3, [r3, #0]
 800023a:	f013 0f02 	tst.w	r3, #2
 800023e:	d0fa      	beq.n	8000236 <RCC_Config+0xa>
	RCC->CFGR= 0x0;
 8000240:	4b03      	ldr	r3, [pc, #12]	; (8000250 <RCC_Config+0x24>)
 8000242:	2200      	movs	r2, #0
 8000244:	605a      	str	r2, [r3, #4]
	RCC->APB2ENR |= 0x14;
 8000246:	699a      	ldr	r2, [r3, #24]
 8000248:	f042 0214 	orr.w	r2, r2, #20
 800024c:	619a      	str	r2, [r3, #24]
 800024e:	4770      	bx	lr
 8000250:	40021000 	.word	0x40021000

08000254 <ledInit>:
}

void ledInit(void)
{
	//GPIOA->CRL = GPIOA->CRL | (0x3<<0) | (0x3<<4) | (0x3<<8) | (0x3<<12);
	GPIOA->CRL = 0x00002222;	// PortA 10MHz, General push-pull Output
 8000254:	f242 2222 	movw	r2, #8738	; 0x2222
 8000258:	4b01      	ldr	r3, [pc, #4]	; (8000260 <ledInit+0xc>)
 800025a:	601a      	str	r2, [r3, #0]
 800025c:	4770      	bx	lr
 800025e:	bf00      	nop
 8000260:	40010800 	.word	0x40010800

08000264 <ledOn>:
}

void ledOn(uint8_t ch)
{
	GPIOA->ODR |= (0x1<<ch);
 8000264:	4903      	ldr	r1, [pc, #12]	; (8000274 <ledOn+0x10>)
 8000266:	68cb      	ldr	r3, [r1, #12]
 8000268:	2201      	movs	r2, #1
 800026a:	fa02 f000 	lsl.w	r0, r2, r0
 800026e:	4303      	orrs	r3, r0
 8000270:	60cb      	str	r3, [r1, #12]
 8000272:	4770      	bx	lr
 8000274:	40010800 	.word	0x40010800

08000278 <ledOff>:
}

void ledOff(uint8_t ch)
{
	GPIOA->ODR &= (~(0x1<<ch));
 8000278:	4904      	ldr	r1, [pc, #16]	; (800028c <ledOff+0x14>)
 800027a:	68cb      	ldr	r3, [r1, #12]
 800027c:	2201      	movs	r2, #1
 800027e:	fa02 f000 	lsl.w	r0, r2, r0
 8000282:	ea23 0300 	bic.w	r3, r3, r0
 8000286:	60cb      	str	r3, [r1, #12]
 8000288:	4770      	bx	lr
 800028a:	bf00      	nop
 800028c:	40010800 	.word	0x40010800

08000290 <ledToggle>:
}

void ledToggle(uint8_t ch)
{
 8000290:	4770      	bx	lr

08000292 <Delay_us>:

}


void Delay_us(unsigned int time_us)		/* time delay for us in 8MHz */
{
 8000292:	b082      	sub	sp, #8
  volatile unsigned int i;

  for(i = 0; i < time_us; i++)			// 3 cycle
 8000294:	2300      	movs	r3, #0
 8000296:	9301      	str	r3, [sp, #4]
 8000298:	e004      	b.n	80002a4 <Delay_us+0x12>
    {
	  asm volatile("NOP");
 800029a:	bf00      	nop
      asm volatile("NOP");
 800029c:	bf00      	nop
  for(i = 0; i < time_us; i++)			// 3 cycle
 800029e:	9b01      	ldr	r3, [sp, #4]
 80002a0:	3301      	adds	r3, #1
 80002a2:	9301      	str	r3, [sp, #4]
 80002a4:	9b01      	ldr	r3, [sp, #4]
 80002a6:	4283      	cmp	r3, r0
 80002a8:	d3f7      	bcc.n	800029a <Delay_us+0x8>
      //asm volatile("NOP");



    }
}
 80002aa:	b002      	add	sp, #8
 80002ac:	4770      	bx	lr

080002ae <Delay_ms>:

void Delay_ms(unsigned int time_ms)		/* time delay for ms in 8MHz */
{
 80002ae:	b510      	push	{r4, lr}
 80002b0:	b082      	sub	sp, #8
 80002b2:	4604      	mov	r4, r0
	volatile unsigned int i;

	for(i = 0; i < time_ms; i++)
 80002b4:	2300      	movs	r3, #0
 80002b6:	9301      	str	r3, [sp, #4]
 80002b8:	e006      	b.n	80002c8 <Delay_ms+0x1a>
    Delay_us(1000);
 80002ba:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80002be:	f7ff ffe8 	bl	8000292 <Delay_us>
	for(i = 0; i < time_ms; i++)
 80002c2:	9b01      	ldr	r3, [sp, #4]
 80002c4:	3301      	adds	r3, #1
 80002c6:	9301      	str	r3, [sp, #4]
 80002c8:	9b01      	ldr	r3, [sp, #4]
 80002ca:	42a3      	cmp	r3, r4
 80002cc:	d3f5      	bcc.n	80002ba <Delay_ms+0xc>
}
 80002ce:	b002      	add	sp, #8
 80002d0:	bd10      	pop	{r4, pc}

080002d2 <SerialPutChar>:

void SerialPutChar(char c)
{

    while((USART1->SR & 0x80) == 0);    // �����Ͱ� TDR���� Shift Register�� �Ű����� ������ ��ٸ�.
 80002d2:	4b04      	ldr	r3, [pc, #16]	; (80002e4 <SerialPutChar+0x12>)
 80002d4:	681b      	ldr	r3, [r3, #0]
 80002d6:	f013 0f80 	tst.w	r3, #128	; 0x80
 80002da:	d0fa      	beq.n	80002d2 <SerialPutChar>
    USART1->DR = c;    // �����͸� USART1_DR �������Ϳ� ��
 80002dc:	4b01      	ldr	r3, [pc, #4]	; (80002e4 <SerialPutChar+0x12>)
 80002de:	6058      	str	r0, [r3, #4]
 80002e0:	4770      	bx	lr
 80002e2:	bf00      	nop
 80002e4:	40013800 	.word	0x40013800

080002e8 <Serial_PutString>:

}

void Serial_PutString(char* s)
{    // ���ڿ� ���
 80002e8:	b510      	push	{r4, lr}
 80002ea:	4604      	mov	r4, r0

    while(*s != '\0'){
 80002ec:	e002      	b.n	80002f4 <Serial_PutString+0xc>
        SerialPutChar(*s);
 80002ee:	f7ff fff0 	bl	80002d2 <SerialPutChar>
        s++;
 80002f2:	3401      	adds	r4, #1
    while(*s != '\0'){
 80002f4:	7820      	ldrb	r0, [r4, #0]
 80002f6:	2800      	cmp	r0, #0
 80002f8:	d1f9      	bne.n	80002ee <Serial_PutString+0x6>
    }
}
 80002fa:	bd10      	pop	{r4, pc}

080002fc <EXTI_Config>:

void EXTI_Config(void)
{
	AFIO->EXTICR[4] = 0x0020;
 80002fc:	2220      	movs	r2, #32
 80002fe:	4b05      	ldr	r3, [pc, #20]	; (8000314 <EXTI_Config+0x18>)
 8000300:	619a      	str	r2, [r3, #24]
	EXTI->IMR 		= 0x01<<13;//
 8000302:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8000306:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800030a:	601a      	str	r2, [r3, #0]
	EXTI->EMR 		= 0x01<<13;
 800030c:	605a      	str	r2, [r3, #4]
    EXTI->RTSR 		= 0x01<<13;
 800030e:	609a      	str	r2, [r3, #8]
 8000310:	4770      	bx	lr
 8000312:	bf00      	nop
 8000314:	40010000 	.word	0x40010000

08000318 <EXTI0_IRQHandler>:
}


void EXTI0_IRQHandler(void)
{
 8000318:	b508      	push	{r3, lr}
	printf(" 0�� \r\n");
 800031a:	4802      	ldr	r0, [pc, #8]	; (8000324 <EXTI0_IRQHandler+0xc>)
 800031c:	f000 f8f2 	bl	8000504 <puts>
 8000320:	bd08      	pop	{r3, pc}
 8000322:	bf00      	nop
 8000324:	08000de0 	.word	0x08000de0

08000328 <EXTI1_IRQHandler>:
}

void EXTI1_IRQHandler(void)
{
 8000328:	b508      	push	{r3, lr}
	printf(" 1�� \r\n");
 800032a:	4802      	ldr	r0, [pc, #8]	; (8000334 <EXTI1_IRQHandler+0xc>)
 800032c:	f000 f8ea 	bl	8000504 <puts>
 8000330:	bd08      	pop	{r3, pc}
 8000332:	bf00      	nop
 8000334:	08000dec 	.word	0x08000dec

08000338 <EXTI15_10_IRQHandler>:
}

void EXTI15_10_IRQHandler(void)
{
 8000338:	b510      	push	{r4, lr}
	GPIOA->BSRR |= 0x20;
 800033a:	4c0f      	ldr	r4, [pc, #60]	; (8000378 <EXTI15_10_IRQHandler+0x40>)
 800033c:	6923      	ldr	r3, [r4, #16]
 800033e:	f043 0320 	orr.w	r3, r3, #32
 8000342:	6123      	str	r3, [r4, #16]
	Delay_ms(100);
 8000344:	2064      	movs	r0, #100	; 0x64
 8000346:	f7ff ffb2 	bl	80002ae <Delay_ms>
	GPIOA->BRR |= 0x20;
 800034a:	6963      	ldr	r3, [r4, #20]
 800034c:	f043 0320 	orr.w	r3, r3, #32
 8000350:	6163      	str	r3, [r4, #20]
	Delay_ms(100);
 8000352:	2064      	movs	r0, #100	; 0x64
 8000354:	f7ff ffab 	bl	80002ae <Delay_ms>
	GPIOA->BSRR |= 0x20;
 8000358:	6923      	ldr	r3, [r4, #16]
 800035a:	f043 0320 	orr.w	r3, r3, #32
 800035e:	6123      	str	r3, [r4, #16]
	Delay_ms(100);
 8000360:	2064      	movs	r0, #100	; 0x64
 8000362:	f7ff ffa4 	bl	80002ae <Delay_ms>
	GPIOA->BRR |= 0x20;
 8000366:	6963      	ldr	r3, [r4, #20]
 8000368:	f043 0320 	orr.w	r3, r3, #32
 800036c:	6163      	str	r3, [r4, #20]
	Delay_ms(100);
 800036e:	2064      	movs	r0, #100	; 0x64
 8000370:	f7ff ff9d 	bl	80002ae <Delay_ms>
 8000374:	bd10      	pop	{r4, pc}
 8000376:	bf00      	nop
 8000378:	40010800 	.word	0x40010800

0800037c <USART3_IRQHandler>:

}

void USART3_IRQHandler(void)
{
 800037c:	4770      	bx	lr
 800037e:	bf00      	nop

08000380 <main>:
#include "My103.h"
#include "stm32f103xb.h"


int main(void){
 8000380:	b510      	push	{r4, lr}
	RCC_Config();
 8000382:	f7ff ff53 	bl	800022c <RCC_Config>
	ledInit();
 8000386:	f7ff ff65 	bl	8000254 <ledInit>
 800038a:	e013      	b.n	80003b4 <main+0x34>
	uint32_t i=0;
	while(1){
		for(i=0;i<4;i++) {
			Delay_ms(100);
 800038c:	2064      	movs	r0, #100	; 0x64
 800038e:	f7ff ff8e 	bl	80002ae <Delay_ms>
			ledOn(i);
 8000392:	b2e0      	uxtb	r0, r4
 8000394:	f7ff ff66 	bl	8000264 <ledOn>
		for(i=0;i<4;i++) {
 8000398:	3401      	adds	r4, #1
 800039a:	2c03      	cmp	r4, #3
 800039c:	d9f6      	bls.n	800038c <main+0xc>
 800039e:	2400      	movs	r4, #0
 80003a0:	e006      	b.n	80003b0 <main+0x30>
		}
		for(i=0;i<4;i++) {
			Delay_ms(100);
 80003a2:	2064      	movs	r0, #100	; 0x64
 80003a4:	f7ff ff83 	bl	80002ae <Delay_ms>
			ledOff(i);
 80003a8:	b2e0      	uxtb	r0, r4
 80003aa:	f7ff ff65 	bl	8000278 <ledOff>
		for(i=0;i<4;i++) {
 80003ae:	3401      	adds	r4, #1
 80003b0:	2c03      	cmp	r4, #3
 80003b2:	d9f6      	bls.n	80003a2 <main+0x22>
		for(i=0;i<4;i++) {
 80003b4:	2400      	movs	r4, #0
 80003b6:	e7f0      	b.n	800039a <main+0x1a>

080003b8 <Reset_Handler>:
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:

/* Copy the data segment initializers from flash to SRAM */
  movs r1, #0
 80003b8:	2100      	movs	r1, #0
  b LoopCopyDataInit
 80003ba:	e003      	b.n	80003c4 <LoopCopyDataInit>

080003bc <CopyDataInit>:

CopyDataInit:
  ldr r3, =_sidata
 80003bc:	4b0b      	ldr	r3, [pc, #44]	; (80003ec <LoopFillZerobss+0x14>)
  ldr r3, [r3, r1]
 80003be:	585b      	ldr	r3, [r3, r1]
  str r3, [r0, r1]
 80003c0:	5043      	str	r3, [r0, r1]
  adds r1, r1, #4
 80003c2:	3104      	adds	r1, #4

080003c4 <LoopCopyDataInit>:

LoopCopyDataInit:
  ldr r0, =_sdata
 80003c4:	480a      	ldr	r0, [pc, #40]	; (80003f0 <LoopFillZerobss+0x18>)
  ldr r3, =_edata
 80003c6:	4b0b      	ldr	r3, [pc, #44]	; (80003f4 <LoopFillZerobss+0x1c>)
  adds r2, r0, r1
 80003c8:	1842      	adds	r2, r0, r1
  cmp r2, r3
 80003ca:	429a      	cmp	r2, r3
  bcc CopyDataInit
 80003cc:	d3f6      	bcc.n	80003bc <CopyDataInit>
  ldr r2, =_sbss
 80003ce:	4a0a      	ldr	r2, [pc, #40]	; (80003f8 <LoopFillZerobss+0x20>)
  b LoopFillZerobss
 80003d0:	e002      	b.n	80003d8 <LoopFillZerobss>

080003d2 <FillZerobss>:
/* Zero fill the bss segment. */
FillZerobss:
  movs r3, #0
 80003d2:	2300      	movs	r3, #0
  str r3, [r2], #4
 80003d4:	f842 3b04 	str.w	r3, [r2], #4

080003d8 <LoopFillZerobss>:

LoopFillZerobss:
  ldr r3, = _ebss
 80003d8:	4b08      	ldr	r3, [pc, #32]	; (80003fc <LoopFillZerobss+0x24>)
  cmp r2, r3
 80003da:	429a      	cmp	r2, r3
  bcc FillZerobss
 80003dc:	d3f9      	bcc.n	80003d2 <FillZerobss>

/* Call the clock system intitialization function.*/
    bl  SystemInit
 80003de:	f7ff feb5 	bl	800014c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80003e2:	f000 f80f 	bl	8000404 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80003e6:	f7ff ffcb 	bl	8000380 <main>
  bx lr
 80003ea:	4770      	bx	lr
  ldr r3, =_sidata
 80003ec:	08000e64 	.word	0x08000e64
  ldr r0, =_sdata
 80003f0:	20000000 	.word	0x20000000
  ldr r3, =_edata
 80003f4:	20000068 	.word	0x20000068
  ldr r2, =_sbss
 80003f8:	20000068 	.word	0x20000068
  ldr r3, = _ebss
 80003fc:	20000094 	.word	0x20000094

08000400 <ADC1_2_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000400:	e7fe      	b.n	8000400 <ADC1_2_IRQHandler>
	...

08000404 <__libc_init_array>:
 8000404:	b570      	push	{r4, r5, r6, lr}
 8000406:	2500      	movs	r5, #0
 8000408:	4e0c      	ldr	r6, [pc, #48]	; (800043c <__libc_init_array+0x38>)
 800040a:	4c0d      	ldr	r4, [pc, #52]	; (8000440 <__libc_init_array+0x3c>)
 800040c:	1ba4      	subs	r4, r4, r6
 800040e:	10a4      	asrs	r4, r4, #2
 8000410:	42a5      	cmp	r5, r4
 8000412:	d109      	bne.n	8000428 <__libc_init_array+0x24>
 8000414:	f000 fccc 	bl	8000db0 <_init>
 8000418:	2500      	movs	r5, #0
 800041a:	4e0a      	ldr	r6, [pc, #40]	; (8000444 <__libc_init_array+0x40>)
 800041c:	4c0a      	ldr	r4, [pc, #40]	; (8000448 <__libc_init_array+0x44>)
 800041e:	1ba4      	subs	r4, r4, r6
 8000420:	10a4      	asrs	r4, r4, #2
 8000422:	42a5      	cmp	r5, r4
 8000424:	d105      	bne.n	8000432 <__libc_init_array+0x2e>
 8000426:	bd70      	pop	{r4, r5, r6, pc}
 8000428:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800042c:	4798      	blx	r3
 800042e:	3501      	adds	r5, #1
 8000430:	e7ee      	b.n	8000410 <__libc_init_array+0xc>
 8000432:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000436:	4798      	blx	r3
 8000438:	3501      	adds	r5, #1
 800043a:	e7f2      	b.n	8000422 <__libc_init_array+0x1e>
 800043c:	08000e5c 	.word	0x08000e5c
 8000440:	08000e5c 	.word	0x08000e5c
 8000444:	08000e5c 	.word	0x08000e5c
 8000448:	08000e60 	.word	0x08000e60

0800044c <_puts_r>:
 800044c:	b570      	push	{r4, r5, r6, lr}
 800044e:	460e      	mov	r6, r1
 8000450:	4605      	mov	r5, r0
 8000452:	b118      	cbz	r0, 800045c <_puts_r+0x10>
 8000454:	6983      	ldr	r3, [r0, #24]
 8000456:	b90b      	cbnz	r3, 800045c <_puts_r+0x10>
 8000458:	f000 fa0e 	bl	8000878 <__sinit>
 800045c:	69ab      	ldr	r3, [r5, #24]
 800045e:	68ac      	ldr	r4, [r5, #8]
 8000460:	b913      	cbnz	r3, 8000468 <_puts_r+0x1c>
 8000462:	4628      	mov	r0, r5
 8000464:	f000 fa08 	bl	8000878 <__sinit>
 8000468:	4b23      	ldr	r3, [pc, #140]	; (80004f8 <_puts_r+0xac>)
 800046a:	429c      	cmp	r4, r3
 800046c:	d117      	bne.n	800049e <_puts_r+0x52>
 800046e:	686c      	ldr	r4, [r5, #4]
 8000470:	89a3      	ldrh	r3, [r4, #12]
 8000472:	071b      	lsls	r3, r3, #28
 8000474:	d51d      	bpl.n	80004b2 <_puts_r+0x66>
 8000476:	6923      	ldr	r3, [r4, #16]
 8000478:	b1db      	cbz	r3, 80004b2 <_puts_r+0x66>
 800047a:	3e01      	subs	r6, #1
 800047c:	68a3      	ldr	r3, [r4, #8]
 800047e:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000482:	3b01      	subs	r3, #1
 8000484:	60a3      	str	r3, [r4, #8]
 8000486:	b9e9      	cbnz	r1, 80004c4 <_puts_r+0x78>
 8000488:	2b00      	cmp	r3, #0
 800048a:	da2e      	bge.n	80004ea <_puts_r+0x9e>
 800048c:	4622      	mov	r2, r4
 800048e:	210a      	movs	r1, #10
 8000490:	4628      	mov	r0, r5
 8000492:	f000 f83f 	bl	8000514 <__swbuf_r>
 8000496:	3001      	adds	r0, #1
 8000498:	d011      	beq.n	80004be <_puts_r+0x72>
 800049a:	200a      	movs	r0, #10
 800049c:	bd70      	pop	{r4, r5, r6, pc}
 800049e:	4b17      	ldr	r3, [pc, #92]	; (80004fc <_puts_r+0xb0>)
 80004a0:	429c      	cmp	r4, r3
 80004a2:	d101      	bne.n	80004a8 <_puts_r+0x5c>
 80004a4:	68ac      	ldr	r4, [r5, #8]
 80004a6:	e7e3      	b.n	8000470 <_puts_r+0x24>
 80004a8:	4b15      	ldr	r3, [pc, #84]	; (8000500 <_puts_r+0xb4>)
 80004aa:	429c      	cmp	r4, r3
 80004ac:	bf08      	it	eq
 80004ae:	68ec      	ldreq	r4, [r5, #12]
 80004b0:	e7de      	b.n	8000470 <_puts_r+0x24>
 80004b2:	4621      	mov	r1, r4
 80004b4:	4628      	mov	r0, r5
 80004b6:	f000 f87f 	bl	80005b8 <__swsetup_r>
 80004ba:	2800      	cmp	r0, #0
 80004bc:	d0dd      	beq.n	800047a <_puts_r+0x2e>
 80004be:	f04f 30ff 	mov.w	r0, #4294967295
 80004c2:	bd70      	pop	{r4, r5, r6, pc}
 80004c4:	2b00      	cmp	r3, #0
 80004c6:	da04      	bge.n	80004d2 <_puts_r+0x86>
 80004c8:	69a2      	ldr	r2, [r4, #24]
 80004ca:	4293      	cmp	r3, r2
 80004cc:	db06      	blt.n	80004dc <_puts_r+0x90>
 80004ce:	290a      	cmp	r1, #10
 80004d0:	d004      	beq.n	80004dc <_puts_r+0x90>
 80004d2:	6823      	ldr	r3, [r4, #0]
 80004d4:	1c5a      	adds	r2, r3, #1
 80004d6:	6022      	str	r2, [r4, #0]
 80004d8:	7019      	strb	r1, [r3, #0]
 80004da:	e7cf      	b.n	800047c <_puts_r+0x30>
 80004dc:	4622      	mov	r2, r4
 80004de:	4628      	mov	r0, r5
 80004e0:	f000 f818 	bl	8000514 <__swbuf_r>
 80004e4:	3001      	adds	r0, #1
 80004e6:	d1c9      	bne.n	800047c <_puts_r+0x30>
 80004e8:	e7e9      	b.n	80004be <_puts_r+0x72>
 80004ea:	200a      	movs	r0, #10
 80004ec:	6823      	ldr	r3, [r4, #0]
 80004ee:	1c5a      	adds	r2, r3, #1
 80004f0:	6022      	str	r2, [r4, #0]
 80004f2:	7018      	strb	r0, [r3, #0]
 80004f4:	bd70      	pop	{r4, r5, r6, pc}
 80004f6:	bf00      	nop
 80004f8:	08000e18 	.word	0x08000e18
 80004fc:	08000e38 	.word	0x08000e38
 8000500:	08000df8 	.word	0x08000df8

08000504 <puts>:
 8000504:	4b02      	ldr	r3, [pc, #8]	; (8000510 <puts+0xc>)
 8000506:	4601      	mov	r1, r0
 8000508:	6818      	ldr	r0, [r3, #0]
 800050a:	f7ff bf9f 	b.w	800044c <_puts_r>
 800050e:	bf00      	nop
 8000510:	20000004 	.word	0x20000004

08000514 <__swbuf_r>:
 8000514:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000516:	460e      	mov	r6, r1
 8000518:	4614      	mov	r4, r2
 800051a:	4605      	mov	r5, r0
 800051c:	b118      	cbz	r0, 8000526 <__swbuf_r+0x12>
 800051e:	6983      	ldr	r3, [r0, #24]
 8000520:	b90b      	cbnz	r3, 8000526 <__swbuf_r+0x12>
 8000522:	f000 f9a9 	bl	8000878 <__sinit>
 8000526:	4b21      	ldr	r3, [pc, #132]	; (80005ac <__swbuf_r+0x98>)
 8000528:	429c      	cmp	r4, r3
 800052a:	d12a      	bne.n	8000582 <__swbuf_r+0x6e>
 800052c:	686c      	ldr	r4, [r5, #4]
 800052e:	69a3      	ldr	r3, [r4, #24]
 8000530:	60a3      	str	r3, [r4, #8]
 8000532:	89a3      	ldrh	r3, [r4, #12]
 8000534:	071a      	lsls	r2, r3, #28
 8000536:	d52e      	bpl.n	8000596 <__swbuf_r+0x82>
 8000538:	6923      	ldr	r3, [r4, #16]
 800053a:	b363      	cbz	r3, 8000596 <__swbuf_r+0x82>
 800053c:	6923      	ldr	r3, [r4, #16]
 800053e:	6820      	ldr	r0, [r4, #0]
 8000540:	b2f6      	uxtb	r6, r6
 8000542:	1ac0      	subs	r0, r0, r3
 8000544:	6963      	ldr	r3, [r4, #20]
 8000546:	4637      	mov	r7, r6
 8000548:	4298      	cmp	r0, r3
 800054a:	db04      	blt.n	8000556 <__swbuf_r+0x42>
 800054c:	4621      	mov	r1, r4
 800054e:	4628      	mov	r0, r5
 8000550:	f000 f928 	bl	80007a4 <_fflush_r>
 8000554:	bb28      	cbnz	r0, 80005a2 <__swbuf_r+0x8e>
 8000556:	68a3      	ldr	r3, [r4, #8]
 8000558:	3001      	adds	r0, #1
 800055a:	3b01      	subs	r3, #1
 800055c:	60a3      	str	r3, [r4, #8]
 800055e:	6823      	ldr	r3, [r4, #0]
 8000560:	1c5a      	adds	r2, r3, #1
 8000562:	6022      	str	r2, [r4, #0]
 8000564:	701e      	strb	r6, [r3, #0]
 8000566:	6963      	ldr	r3, [r4, #20]
 8000568:	4298      	cmp	r0, r3
 800056a:	d004      	beq.n	8000576 <__swbuf_r+0x62>
 800056c:	89a3      	ldrh	r3, [r4, #12]
 800056e:	07db      	lsls	r3, r3, #31
 8000570:	d519      	bpl.n	80005a6 <__swbuf_r+0x92>
 8000572:	2e0a      	cmp	r6, #10
 8000574:	d117      	bne.n	80005a6 <__swbuf_r+0x92>
 8000576:	4621      	mov	r1, r4
 8000578:	4628      	mov	r0, r5
 800057a:	f000 f913 	bl	80007a4 <_fflush_r>
 800057e:	b190      	cbz	r0, 80005a6 <__swbuf_r+0x92>
 8000580:	e00f      	b.n	80005a2 <__swbuf_r+0x8e>
 8000582:	4b0b      	ldr	r3, [pc, #44]	; (80005b0 <__swbuf_r+0x9c>)
 8000584:	429c      	cmp	r4, r3
 8000586:	d101      	bne.n	800058c <__swbuf_r+0x78>
 8000588:	68ac      	ldr	r4, [r5, #8]
 800058a:	e7d0      	b.n	800052e <__swbuf_r+0x1a>
 800058c:	4b09      	ldr	r3, [pc, #36]	; (80005b4 <__swbuf_r+0xa0>)
 800058e:	429c      	cmp	r4, r3
 8000590:	bf08      	it	eq
 8000592:	68ec      	ldreq	r4, [r5, #12]
 8000594:	e7cb      	b.n	800052e <__swbuf_r+0x1a>
 8000596:	4621      	mov	r1, r4
 8000598:	4628      	mov	r0, r5
 800059a:	f000 f80d 	bl	80005b8 <__swsetup_r>
 800059e:	2800      	cmp	r0, #0
 80005a0:	d0cc      	beq.n	800053c <__swbuf_r+0x28>
 80005a2:	f04f 37ff 	mov.w	r7, #4294967295
 80005a6:	4638      	mov	r0, r7
 80005a8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80005aa:	bf00      	nop
 80005ac:	08000e18 	.word	0x08000e18
 80005b0:	08000e38 	.word	0x08000e38
 80005b4:	08000df8 	.word	0x08000df8

080005b8 <__swsetup_r>:
 80005b8:	4b32      	ldr	r3, [pc, #200]	; (8000684 <__swsetup_r+0xcc>)
 80005ba:	b570      	push	{r4, r5, r6, lr}
 80005bc:	681d      	ldr	r5, [r3, #0]
 80005be:	4606      	mov	r6, r0
 80005c0:	460c      	mov	r4, r1
 80005c2:	b125      	cbz	r5, 80005ce <__swsetup_r+0x16>
 80005c4:	69ab      	ldr	r3, [r5, #24]
 80005c6:	b913      	cbnz	r3, 80005ce <__swsetup_r+0x16>
 80005c8:	4628      	mov	r0, r5
 80005ca:	f000 f955 	bl	8000878 <__sinit>
 80005ce:	4b2e      	ldr	r3, [pc, #184]	; (8000688 <__swsetup_r+0xd0>)
 80005d0:	429c      	cmp	r4, r3
 80005d2:	d10f      	bne.n	80005f4 <__swsetup_r+0x3c>
 80005d4:	686c      	ldr	r4, [r5, #4]
 80005d6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80005da:	b29a      	uxth	r2, r3
 80005dc:	0715      	lsls	r5, r2, #28
 80005de:	d42c      	bmi.n	800063a <__swsetup_r+0x82>
 80005e0:	06d0      	lsls	r0, r2, #27
 80005e2:	d411      	bmi.n	8000608 <__swsetup_r+0x50>
 80005e4:	2209      	movs	r2, #9
 80005e6:	6032      	str	r2, [r6, #0]
 80005e8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80005ec:	81a3      	strh	r3, [r4, #12]
 80005ee:	f04f 30ff 	mov.w	r0, #4294967295
 80005f2:	bd70      	pop	{r4, r5, r6, pc}
 80005f4:	4b25      	ldr	r3, [pc, #148]	; (800068c <__swsetup_r+0xd4>)
 80005f6:	429c      	cmp	r4, r3
 80005f8:	d101      	bne.n	80005fe <__swsetup_r+0x46>
 80005fa:	68ac      	ldr	r4, [r5, #8]
 80005fc:	e7eb      	b.n	80005d6 <__swsetup_r+0x1e>
 80005fe:	4b24      	ldr	r3, [pc, #144]	; (8000690 <__swsetup_r+0xd8>)
 8000600:	429c      	cmp	r4, r3
 8000602:	bf08      	it	eq
 8000604:	68ec      	ldreq	r4, [r5, #12]
 8000606:	e7e6      	b.n	80005d6 <__swsetup_r+0x1e>
 8000608:	0751      	lsls	r1, r2, #29
 800060a:	d512      	bpl.n	8000632 <__swsetup_r+0x7a>
 800060c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800060e:	b141      	cbz	r1, 8000622 <__swsetup_r+0x6a>
 8000610:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000614:	4299      	cmp	r1, r3
 8000616:	d002      	beq.n	800061e <__swsetup_r+0x66>
 8000618:	4630      	mov	r0, r6
 800061a:	f000 fa23 	bl	8000a64 <_free_r>
 800061e:	2300      	movs	r3, #0
 8000620:	6363      	str	r3, [r4, #52]	; 0x34
 8000622:	89a3      	ldrh	r3, [r4, #12]
 8000624:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000628:	81a3      	strh	r3, [r4, #12]
 800062a:	2300      	movs	r3, #0
 800062c:	6063      	str	r3, [r4, #4]
 800062e:	6923      	ldr	r3, [r4, #16]
 8000630:	6023      	str	r3, [r4, #0]
 8000632:	89a3      	ldrh	r3, [r4, #12]
 8000634:	f043 0308 	orr.w	r3, r3, #8
 8000638:	81a3      	strh	r3, [r4, #12]
 800063a:	6923      	ldr	r3, [r4, #16]
 800063c:	b94b      	cbnz	r3, 8000652 <__swsetup_r+0x9a>
 800063e:	89a3      	ldrh	r3, [r4, #12]
 8000640:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000644:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000648:	d003      	beq.n	8000652 <__swsetup_r+0x9a>
 800064a:	4621      	mov	r1, r4
 800064c:	4630      	mov	r0, r6
 800064e:	f000 f9c1 	bl	80009d4 <__smakebuf_r>
 8000652:	89a2      	ldrh	r2, [r4, #12]
 8000654:	f012 0301 	ands.w	r3, r2, #1
 8000658:	d00c      	beq.n	8000674 <__swsetup_r+0xbc>
 800065a:	2300      	movs	r3, #0
 800065c:	60a3      	str	r3, [r4, #8]
 800065e:	6963      	ldr	r3, [r4, #20]
 8000660:	425b      	negs	r3, r3
 8000662:	61a3      	str	r3, [r4, #24]
 8000664:	6923      	ldr	r3, [r4, #16]
 8000666:	b953      	cbnz	r3, 800067e <__swsetup_r+0xc6>
 8000668:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800066c:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 8000670:	d1ba      	bne.n	80005e8 <__swsetup_r+0x30>
 8000672:	bd70      	pop	{r4, r5, r6, pc}
 8000674:	0792      	lsls	r2, r2, #30
 8000676:	bf58      	it	pl
 8000678:	6963      	ldrpl	r3, [r4, #20]
 800067a:	60a3      	str	r3, [r4, #8]
 800067c:	e7f2      	b.n	8000664 <__swsetup_r+0xac>
 800067e:	2000      	movs	r0, #0
 8000680:	e7f7      	b.n	8000672 <__swsetup_r+0xba>
 8000682:	bf00      	nop
 8000684:	20000004 	.word	0x20000004
 8000688:	08000e18 	.word	0x08000e18
 800068c:	08000e38 	.word	0x08000e38
 8000690:	08000df8 	.word	0x08000df8

08000694 <__sflush_r>:
 8000694:	898a      	ldrh	r2, [r1, #12]
 8000696:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800069a:	4605      	mov	r5, r0
 800069c:	0710      	lsls	r0, r2, #28
 800069e:	460c      	mov	r4, r1
 80006a0:	d45a      	bmi.n	8000758 <__sflush_r+0xc4>
 80006a2:	684b      	ldr	r3, [r1, #4]
 80006a4:	2b00      	cmp	r3, #0
 80006a6:	dc05      	bgt.n	80006b4 <__sflush_r+0x20>
 80006a8:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80006aa:	2b00      	cmp	r3, #0
 80006ac:	dc02      	bgt.n	80006b4 <__sflush_r+0x20>
 80006ae:	2000      	movs	r0, #0
 80006b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80006b4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80006b6:	2e00      	cmp	r6, #0
 80006b8:	d0f9      	beq.n	80006ae <__sflush_r+0x1a>
 80006ba:	2300      	movs	r3, #0
 80006bc:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80006c0:	682f      	ldr	r7, [r5, #0]
 80006c2:	602b      	str	r3, [r5, #0]
 80006c4:	d033      	beq.n	800072e <__sflush_r+0x9a>
 80006c6:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80006c8:	89a3      	ldrh	r3, [r4, #12]
 80006ca:	075a      	lsls	r2, r3, #29
 80006cc:	d505      	bpl.n	80006da <__sflush_r+0x46>
 80006ce:	6863      	ldr	r3, [r4, #4]
 80006d0:	1ac0      	subs	r0, r0, r3
 80006d2:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80006d4:	b10b      	cbz	r3, 80006da <__sflush_r+0x46>
 80006d6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80006d8:	1ac0      	subs	r0, r0, r3
 80006da:	2300      	movs	r3, #0
 80006dc:	4602      	mov	r2, r0
 80006de:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80006e0:	6a21      	ldr	r1, [r4, #32]
 80006e2:	4628      	mov	r0, r5
 80006e4:	47b0      	blx	r6
 80006e6:	1c43      	adds	r3, r0, #1
 80006e8:	89a3      	ldrh	r3, [r4, #12]
 80006ea:	d106      	bne.n	80006fa <__sflush_r+0x66>
 80006ec:	6829      	ldr	r1, [r5, #0]
 80006ee:	291d      	cmp	r1, #29
 80006f0:	d84b      	bhi.n	800078a <__sflush_r+0xf6>
 80006f2:	4a2b      	ldr	r2, [pc, #172]	; (80007a0 <__sflush_r+0x10c>)
 80006f4:	40ca      	lsrs	r2, r1
 80006f6:	07d6      	lsls	r6, r2, #31
 80006f8:	d547      	bpl.n	800078a <__sflush_r+0xf6>
 80006fa:	2200      	movs	r2, #0
 80006fc:	6062      	str	r2, [r4, #4]
 80006fe:	6922      	ldr	r2, [r4, #16]
 8000700:	04d9      	lsls	r1, r3, #19
 8000702:	6022      	str	r2, [r4, #0]
 8000704:	d504      	bpl.n	8000710 <__sflush_r+0x7c>
 8000706:	1c42      	adds	r2, r0, #1
 8000708:	d101      	bne.n	800070e <__sflush_r+0x7a>
 800070a:	682b      	ldr	r3, [r5, #0]
 800070c:	b903      	cbnz	r3, 8000710 <__sflush_r+0x7c>
 800070e:	6560      	str	r0, [r4, #84]	; 0x54
 8000710:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000712:	602f      	str	r7, [r5, #0]
 8000714:	2900      	cmp	r1, #0
 8000716:	d0ca      	beq.n	80006ae <__sflush_r+0x1a>
 8000718:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800071c:	4299      	cmp	r1, r3
 800071e:	d002      	beq.n	8000726 <__sflush_r+0x92>
 8000720:	4628      	mov	r0, r5
 8000722:	f000 f99f 	bl	8000a64 <_free_r>
 8000726:	2000      	movs	r0, #0
 8000728:	6360      	str	r0, [r4, #52]	; 0x34
 800072a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800072e:	6a21      	ldr	r1, [r4, #32]
 8000730:	2301      	movs	r3, #1
 8000732:	4628      	mov	r0, r5
 8000734:	47b0      	blx	r6
 8000736:	1c41      	adds	r1, r0, #1
 8000738:	d1c6      	bne.n	80006c8 <__sflush_r+0x34>
 800073a:	682b      	ldr	r3, [r5, #0]
 800073c:	2b00      	cmp	r3, #0
 800073e:	d0c3      	beq.n	80006c8 <__sflush_r+0x34>
 8000740:	2b1d      	cmp	r3, #29
 8000742:	d001      	beq.n	8000748 <__sflush_r+0xb4>
 8000744:	2b16      	cmp	r3, #22
 8000746:	d101      	bne.n	800074c <__sflush_r+0xb8>
 8000748:	602f      	str	r7, [r5, #0]
 800074a:	e7b0      	b.n	80006ae <__sflush_r+0x1a>
 800074c:	89a3      	ldrh	r3, [r4, #12]
 800074e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000752:	81a3      	strh	r3, [r4, #12]
 8000754:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000758:	690f      	ldr	r7, [r1, #16]
 800075a:	2f00      	cmp	r7, #0
 800075c:	d0a7      	beq.n	80006ae <__sflush_r+0x1a>
 800075e:	0793      	lsls	r3, r2, #30
 8000760:	bf18      	it	ne
 8000762:	2300      	movne	r3, #0
 8000764:	680e      	ldr	r6, [r1, #0]
 8000766:	bf08      	it	eq
 8000768:	694b      	ldreq	r3, [r1, #20]
 800076a:	eba6 0807 	sub.w	r8, r6, r7
 800076e:	600f      	str	r7, [r1, #0]
 8000770:	608b      	str	r3, [r1, #8]
 8000772:	f1b8 0f00 	cmp.w	r8, #0
 8000776:	dd9a      	ble.n	80006ae <__sflush_r+0x1a>
 8000778:	4643      	mov	r3, r8
 800077a:	463a      	mov	r2, r7
 800077c:	6a21      	ldr	r1, [r4, #32]
 800077e:	4628      	mov	r0, r5
 8000780:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000782:	47b0      	blx	r6
 8000784:	2800      	cmp	r0, #0
 8000786:	dc07      	bgt.n	8000798 <__sflush_r+0x104>
 8000788:	89a3      	ldrh	r3, [r4, #12]
 800078a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800078e:	81a3      	strh	r3, [r4, #12]
 8000790:	f04f 30ff 	mov.w	r0, #4294967295
 8000794:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000798:	4407      	add	r7, r0
 800079a:	eba8 0800 	sub.w	r8, r8, r0
 800079e:	e7e8      	b.n	8000772 <__sflush_r+0xde>
 80007a0:	20400001 	.word	0x20400001

080007a4 <_fflush_r>:
 80007a4:	b538      	push	{r3, r4, r5, lr}
 80007a6:	690b      	ldr	r3, [r1, #16]
 80007a8:	4605      	mov	r5, r0
 80007aa:	460c      	mov	r4, r1
 80007ac:	b1db      	cbz	r3, 80007e6 <_fflush_r+0x42>
 80007ae:	b118      	cbz	r0, 80007b8 <_fflush_r+0x14>
 80007b0:	6983      	ldr	r3, [r0, #24]
 80007b2:	b90b      	cbnz	r3, 80007b8 <_fflush_r+0x14>
 80007b4:	f000 f860 	bl	8000878 <__sinit>
 80007b8:	4b0c      	ldr	r3, [pc, #48]	; (80007ec <_fflush_r+0x48>)
 80007ba:	429c      	cmp	r4, r3
 80007bc:	d109      	bne.n	80007d2 <_fflush_r+0x2e>
 80007be:	686c      	ldr	r4, [r5, #4]
 80007c0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80007c4:	b17b      	cbz	r3, 80007e6 <_fflush_r+0x42>
 80007c6:	4621      	mov	r1, r4
 80007c8:	4628      	mov	r0, r5
 80007ca:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80007ce:	f7ff bf61 	b.w	8000694 <__sflush_r>
 80007d2:	4b07      	ldr	r3, [pc, #28]	; (80007f0 <_fflush_r+0x4c>)
 80007d4:	429c      	cmp	r4, r3
 80007d6:	d101      	bne.n	80007dc <_fflush_r+0x38>
 80007d8:	68ac      	ldr	r4, [r5, #8]
 80007da:	e7f1      	b.n	80007c0 <_fflush_r+0x1c>
 80007dc:	4b05      	ldr	r3, [pc, #20]	; (80007f4 <_fflush_r+0x50>)
 80007de:	429c      	cmp	r4, r3
 80007e0:	bf08      	it	eq
 80007e2:	68ec      	ldreq	r4, [r5, #12]
 80007e4:	e7ec      	b.n	80007c0 <_fflush_r+0x1c>
 80007e6:	2000      	movs	r0, #0
 80007e8:	bd38      	pop	{r3, r4, r5, pc}
 80007ea:	bf00      	nop
 80007ec:	08000e18 	.word	0x08000e18
 80007f0:	08000e38 	.word	0x08000e38
 80007f4:	08000df8 	.word	0x08000df8

080007f8 <_cleanup_r>:
 80007f8:	4901      	ldr	r1, [pc, #4]	; (8000800 <_cleanup_r+0x8>)
 80007fa:	f000 b8a9 	b.w	8000950 <_fwalk_reent>
 80007fe:	bf00      	nop
 8000800:	080007a5 	.word	0x080007a5

08000804 <std.isra.0>:
 8000804:	2300      	movs	r3, #0
 8000806:	b510      	push	{r4, lr}
 8000808:	4604      	mov	r4, r0
 800080a:	6003      	str	r3, [r0, #0]
 800080c:	6043      	str	r3, [r0, #4]
 800080e:	6083      	str	r3, [r0, #8]
 8000810:	8181      	strh	r1, [r0, #12]
 8000812:	6643      	str	r3, [r0, #100]	; 0x64
 8000814:	81c2      	strh	r2, [r0, #14]
 8000816:	6103      	str	r3, [r0, #16]
 8000818:	6143      	str	r3, [r0, #20]
 800081a:	6183      	str	r3, [r0, #24]
 800081c:	4619      	mov	r1, r3
 800081e:	2208      	movs	r2, #8
 8000820:	305c      	adds	r0, #92	; 0x5c
 8000822:	f000 f917 	bl	8000a54 <memset>
 8000826:	4b05      	ldr	r3, [pc, #20]	; (800083c <std.isra.0+0x38>)
 8000828:	6224      	str	r4, [r4, #32]
 800082a:	6263      	str	r3, [r4, #36]	; 0x24
 800082c:	4b04      	ldr	r3, [pc, #16]	; (8000840 <std.isra.0+0x3c>)
 800082e:	62a3      	str	r3, [r4, #40]	; 0x28
 8000830:	4b04      	ldr	r3, [pc, #16]	; (8000844 <std.isra.0+0x40>)
 8000832:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000834:	4b04      	ldr	r3, [pc, #16]	; (8000848 <std.isra.0+0x44>)
 8000836:	6323      	str	r3, [r4, #48]	; 0x30
 8000838:	bd10      	pop	{r4, pc}
 800083a:	bf00      	nop
 800083c:	08000bd9 	.word	0x08000bd9
 8000840:	08000bfb 	.word	0x08000bfb
 8000844:	08000c33 	.word	0x08000c33
 8000848:	08000c57 	.word	0x08000c57

0800084c <__sfmoreglue>:
 800084c:	b570      	push	{r4, r5, r6, lr}
 800084e:	2568      	movs	r5, #104	; 0x68
 8000850:	1e4a      	subs	r2, r1, #1
 8000852:	4355      	muls	r5, r2
 8000854:	460e      	mov	r6, r1
 8000856:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800085a:	f000 f94f 	bl	8000afc <_malloc_r>
 800085e:	4604      	mov	r4, r0
 8000860:	b140      	cbz	r0, 8000874 <__sfmoreglue+0x28>
 8000862:	2100      	movs	r1, #0
 8000864:	e880 0042 	stmia.w	r0, {r1, r6}
 8000868:	300c      	adds	r0, #12
 800086a:	60a0      	str	r0, [r4, #8]
 800086c:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000870:	f000 f8f0 	bl	8000a54 <memset>
 8000874:	4620      	mov	r0, r4
 8000876:	bd70      	pop	{r4, r5, r6, pc}

08000878 <__sinit>:
 8000878:	6983      	ldr	r3, [r0, #24]
 800087a:	b510      	push	{r4, lr}
 800087c:	4604      	mov	r4, r0
 800087e:	bb33      	cbnz	r3, 80008ce <__sinit+0x56>
 8000880:	6483      	str	r3, [r0, #72]	; 0x48
 8000882:	64c3      	str	r3, [r0, #76]	; 0x4c
 8000884:	6503      	str	r3, [r0, #80]	; 0x50
 8000886:	4b12      	ldr	r3, [pc, #72]	; (80008d0 <__sinit+0x58>)
 8000888:	4a12      	ldr	r2, [pc, #72]	; (80008d4 <__sinit+0x5c>)
 800088a:	681b      	ldr	r3, [r3, #0]
 800088c:	6282      	str	r2, [r0, #40]	; 0x28
 800088e:	4298      	cmp	r0, r3
 8000890:	bf04      	itt	eq
 8000892:	2301      	moveq	r3, #1
 8000894:	6183      	streq	r3, [r0, #24]
 8000896:	f000 f81f 	bl	80008d8 <__sfp>
 800089a:	6060      	str	r0, [r4, #4]
 800089c:	4620      	mov	r0, r4
 800089e:	f000 f81b 	bl	80008d8 <__sfp>
 80008a2:	60a0      	str	r0, [r4, #8]
 80008a4:	4620      	mov	r0, r4
 80008a6:	f000 f817 	bl	80008d8 <__sfp>
 80008aa:	2200      	movs	r2, #0
 80008ac:	60e0      	str	r0, [r4, #12]
 80008ae:	2104      	movs	r1, #4
 80008b0:	6860      	ldr	r0, [r4, #4]
 80008b2:	f7ff ffa7 	bl	8000804 <std.isra.0>
 80008b6:	2201      	movs	r2, #1
 80008b8:	2109      	movs	r1, #9
 80008ba:	68a0      	ldr	r0, [r4, #8]
 80008bc:	f7ff ffa2 	bl	8000804 <std.isra.0>
 80008c0:	2202      	movs	r2, #2
 80008c2:	2112      	movs	r1, #18
 80008c4:	68e0      	ldr	r0, [r4, #12]
 80008c6:	f7ff ff9d 	bl	8000804 <std.isra.0>
 80008ca:	2301      	movs	r3, #1
 80008cc:	61a3      	str	r3, [r4, #24]
 80008ce:	bd10      	pop	{r4, pc}
 80008d0:	08000e58 	.word	0x08000e58
 80008d4:	080007f9 	.word	0x080007f9

080008d8 <__sfp>:
 80008d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008da:	4b1c      	ldr	r3, [pc, #112]	; (800094c <__sfp+0x74>)
 80008dc:	4607      	mov	r7, r0
 80008de:	681e      	ldr	r6, [r3, #0]
 80008e0:	69b3      	ldr	r3, [r6, #24]
 80008e2:	b913      	cbnz	r3, 80008ea <__sfp+0x12>
 80008e4:	4630      	mov	r0, r6
 80008e6:	f7ff ffc7 	bl	8000878 <__sinit>
 80008ea:	3648      	adds	r6, #72	; 0x48
 80008ec:	68b4      	ldr	r4, [r6, #8]
 80008ee:	6873      	ldr	r3, [r6, #4]
 80008f0:	3b01      	subs	r3, #1
 80008f2:	d503      	bpl.n	80008fc <__sfp+0x24>
 80008f4:	6833      	ldr	r3, [r6, #0]
 80008f6:	b133      	cbz	r3, 8000906 <__sfp+0x2e>
 80008f8:	6836      	ldr	r6, [r6, #0]
 80008fa:	e7f7      	b.n	80008ec <__sfp+0x14>
 80008fc:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000900:	b16d      	cbz	r5, 800091e <__sfp+0x46>
 8000902:	3468      	adds	r4, #104	; 0x68
 8000904:	e7f4      	b.n	80008f0 <__sfp+0x18>
 8000906:	2104      	movs	r1, #4
 8000908:	4638      	mov	r0, r7
 800090a:	f7ff ff9f 	bl	800084c <__sfmoreglue>
 800090e:	6030      	str	r0, [r6, #0]
 8000910:	2800      	cmp	r0, #0
 8000912:	d1f1      	bne.n	80008f8 <__sfp+0x20>
 8000914:	230c      	movs	r3, #12
 8000916:	4604      	mov	r4, r0
 8000918:	603b      	str	r3, [r7, #0]
 800091a:	4620      	mov	r0, r4
 800091c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800091e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8000922:	81e3      	strh	r3, [r4, #14]
 8000924:	2301      	movs	r3, #1
 8000926:	6665      	str	r5, [r4, #100]	; 0x64
 8000928:	81a3      	strh	r3, [r4, #12]
 800092a:	6025      	str	r5, [r4, #0]
 800092c:	60a5      	str	r5, [r4, #8]
 800092e:	6065      	str	r5, [r4, #4]
 8000930:	6125      	str	r5, [r4, #16]
 8000932:	6165      	str	r5, [r4, #20]
 8000934:	61a5      	str	r5, [r4, #24]
 8000936:	2208      	movs	r2, #8
 8000938:	4629      	mov	r1, r5
 800093a:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800093e:	f000 f889 	bl	8000a54 <memset>
 8000942:	6365      	str	r5, [r4, #52]	; 0x34
 8000944:	63a5      	str	r5, [r4, #56]	; 0x38
 8000946:	64a5      	str	r5, [r4, #72]	; 0x48
 8000948:	64e5      	str	r5, [r4, #76]	; 0x4c
 800094a:	e7e6      	b.n	800091a <__sfp+0x42>
 800094c:	08000e58 	.word	0x08000e58

08000950 <_fwalk_reent>:
 8000950:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000954:	4680      	mov	r8, r0
 8000956:	4689      	mov	r9, r1
 8000958:	2600      	movs	r6, #0
 800095a:	f100 0448 	add.w	r4, r0, #72	; 0x48
 800095e:	b914      	cbnz	r4, 8000966 <_fwalk_reent+0x16>
 8000960:	4630      	mov	r0, r6
 8000962:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000966:	68a5      	ldr	r5, [r4, #8]
 8000968:	6867      	ldr	r7, [r4, #4]
 800096a:	3f01      	subs	r7, #1
 800096c:	d501      	bpl.n	8000972 <_fwalk_reent+0x22>
 800096e:	6824      	ldr	r4, [r4, #0]
 8000970:	e7f5      	b.n	800095e <_fwalk_reent+0xe>
 8000972:	89ab      	ldrh	r3, [r5, #12]
 8000974:	2b01      	cmp	r3, #1
 8000976:	d907      	bls.n	8000988 <_fwalk_reent+0x38>
 8000978:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800097c:	3301      	adds	r3, #1
 800097e:	d003      	beq.n	8000988 <_fwalk_reent+0x38>
 8000980:	4629      	mov	r1, r5
 8000982:	4640      	mov	r0, r8
 8000984:	47c8      	blx	r9
 8000986:	4306      	orrs	r6, r0
 8000988:	3568      	adds	r5, #104	; 0x68
 800098a:	e7ee      	b.n	800096a <_fwalk_reent+0x1a>

0800098c <__swhatbuf_r>:
 800098c:	b570      	push	{r4, r5, r6, lr}
 800098e:	460e      	mov	r6, r1
 8000990:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000994:	b090      	sub	sp, #64	; 0x40
 8000996:	2900      	cmp	r1, #0
 8000998:	4614      	mov	r4, r2
 800099a:	461d      	mov	r5, r3
 800099c:	da07      	bge.n	80009ae <__swhatbuf_r+0x22>
 800099e:	2300      	movs	r3, #0
 80009a0:	602b      	str	r3, [r5, #0]
 80009a2:	89b3      	ldrh	r3, [r6, #12]
 80009a4:	061a      	lsls	r2, r3, #24
 80009a6:	d410      	bmi.n	80009ca <__swhatbuf_r+0x3e>
 80009a8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80009ac:	e00e      	b.n	80009cc <__swhatbuf_r+0x40>
 80009ae:	aa01      	add	r2, sp, #4
 80009b0:	f000 f978 	bl	8000ca4 <_fstat_r>
 80009b4:	2800      	cmp	r0, #0
 80009b6:	dbf2      	blt.n	800099e <__swhatbuf_r+0x12>
 80009b8:	9a02      	ldr	r2, [sp, #8]
 80009ba:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80009be:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80009c2:	425a      	negs	r2, r3
 80009c4:	415a      	adcs	r2, r3
 80009c6:	602a      	str	r2, [r5, #0]
 80009c8:	e7ee      	b.n	80009a8 <__swhatbuf_r+0x1c>
 80009ca:	2340      	movs	r3, #64	; 0x40
 80009cc:	2000      	movs	r0, #0
 80009ce:	6023      	str	r3, [r4, #0]
 80009d0:	b010      	add	sp, #64	; 0x40
 80009d2:	bd70      	pop	{r4, r5, r6, pc}

080009d4 <__smakebuf_r>:
 80009d4:	898b      	ldrh	r3, [r1, #12]
 80009d6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80009d8:	079d      	lsls	r5, r3, #30
 80009da:	4606      	mov	r6, r0
 80009dc:	460c      	mov	r4, r1
 80009de:	d507      	bpl.n	80009f0 <__smakebuf_r+0x1c>
 80009e0:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80009e4:	6023      	str	r3, [r4, #0]
 80009e6:	6123      	str	r3, [r4, #16]
 80009e8:	2301      	movs	r3, #1
 80009ea:	6163      	str	r3, [r4, #20]
 80009ec:	b002      	add	sp, #8
 80009ee:	bd70      	pop	{r4, r5, r6, pc}
 80009f0:	ab01      	add	r3, sp, #4
 80009f2:	466a      	mov	r2, sp
 80009f4:	f7ff ffca 	bl	800098c <__swhatbuf_r>
 80009f8:	9900      	ldr	r1, [sp, #0]
 80009fa:	4605      	mov	r5, r0
 80009fc:	4630      	mov	r0, r6
 80009fe:	f000 f87d 	bl	8000afc <_malloc_r>
 8000a02:	b948      	cbnz	r0, 8000a18 <__smakebuf_r+0x44>
 8000a04:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000a08:	059a      	lsls	r2, r3, #22
 8000a0a:	d4ef      	bmi.n	80009ec <__smakebuf_r+0x18>
 8000a0c:	f023 0303 	bic.w	r3, r3, #3
 8000a10:	f043 0302 	orr.w	r3, r3, #2
 8000a14:	81a3      	strh	r3, [r4, #12]
 8000a16:	e7e3      	b.n	80009e0 <__smakebuf_r+0xc>
 8000a18:	4b0d      	ldr	r3, [pc, #52]	; (8000a50 <__smakebuf_r+0x7c>)
 8000a1a:	62b3      	str	r3, [r6, #40]	; 0x28
 8000a1c:	89a3      	ldrh	r3, [r4, #12]
 8000a1e:	6020      	str	r0, [r4, #0]
 8000a20:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000a24:	81a3      	strh	r3, [r4, #12]
 8000a26:	9b00      	ldr	r3, [sp, #0]
 8000a28:	6120      	str	r0, [r4, #16]
 8000a2a:	6163      	str	r3, [r4, #20]
 8000a2c:	9b01      	ldr	r3, [sp, #4]
 8000a2e:	b15b      	cbz	r3, 8000a48 <__smakebuf_r+0x74>
 8000a30:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000a34:	4630      	mov	r0, r6
 8000a36:	f000 f947 	bl	8000cc8 <_isatty_r>
 8000a3a:	b128      	cbz	r0, 8000a48 <__smakebuf_r+0x74>
 8000a3c:	89a3      	ldrh	r3, [r4, #12]
 8000a3e:	f023 0303 	bic.w	r3, r3, #3
 8000a42:	f043 0301 	orr.w	r3, r3, #1
 8000a46:	81a3      	strh	r3, [r4, #12]
 8000a48:	89a3      	ldrh	r3, [r4, #12]
 8000a4a:	431d      	orrs	r5, r3
 8000a4c:	81a5      	strh	r5, [r4, #12]
 8000a4e:	e7cd      	b.n	80009ec <__smakebuf_r+0x18>
 8000a50:	080007f9 	.word	0x080007f9

08000a54 <memset>:
 8000a54:	4603      	mov	r3, r0
 8000a56:	4402      	add	r2, r0
 8000a58:	4293      	cmp	r3, r2
 8000a5a:	d100      	bne.n	8000a5e <memset+0xa>
 8000a5c:	4770      	bx	lr
 8000a5e:	f803 1b01 	strb.w	r1, [r3], #1
 8000a62:	e7f9      	b.n	8000a58 <memset+0x4>

08000a64 <_free_r>:
 8000a64:	b538      	push	{r3, r4, r5, lr}
 8000a66:	4605      	mov	r5, r0
 8000a68:	2900      	cmp	r1, #0
 8000a6a:	d043      	beq.n	8000af4 <_free_r+0x90>
 8000a6c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000a70:	1f0c      	subs	r4, r1, #4
 8000a72:	2b00      	cmp	r3, #0
 8000a74:	bfb8      	it	lt
 8000a76:	18e4      	addlt	r4, r4, r3
 8000a78:	f000 f948 	bl	8000d0c <__malloc_lock>
 8000a7c:	4a1e      	ldr	r2, [pc, #120]	; (8000af8 <_free_r+0x94>)
 8000a7e:	6813      	ldr	r3, [r2, #0]
 8000a80:	4610      	mov	r0, r2
 8000a82:	b933      	cbnz	r3, 8000a92 <_free_r+0x2e>
 8000a84:	6063      	str	r3, [r4, #4]
 8000a86:	6014      	str	r4, [r2, #0]
 8000a88:	4628      	mov	r0, r5
 8000a8a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000a8e:	f000 b93e 	b.w	8000d0e <__malloc_unlock>
 8000a92:	42a3      	cmp	r3, r4
 8000a94:	d90b      	bls.n	8000aae <_free_r+0x4a>
 8000a96:	6821      	ldr	r1, [r4, #0]
 8000a98:	1862      	adds	r2, r4, r1
 8000a9a:	4293      	cmp	r3, r2
 8000a9c:	bf01      	itttt	eq
 8000a9e:	681a      	ldreq	r2, [r3, #0]
 8000aa0:	685b      	ldreq	r3, [r3, #4]
 8000aa2:	1852      	addeq	r2, r2, r1
 8000aa4:	6022      	streq	r2, [r4, #0]
 8000aa6:	6063      	str	r3, [r4, #4]
 8000aa8:	6004      	str	r4, [r0, #0]
 8000aaa:	e7ed      	b.n	8000a88 <_free_r+0x24>
 8000aac:	4613      	mov	r3, r2
 8000aae:	685a      	ldr	r2, [r3, #4]
 8000ab0:	b10a      	cbz	r2, 8000ab6 <_free_r+0x52>
 8000ab2:	42a2      	cmp	r2, r4
 8000ab4:	d9fa      	bls.n	8000aac <_free_r+0x48>
 8000ab6:	6819      	ldr	r1, [r3, #0]
 8000ab8:	1858      	adds	r0, r3, r1
 8000aba:	42a0      	cmp	r0, r4
 8000abc:	d10b      	bne.n	8000ad6 <_free_r+0x72>
 8000abe:	6820      	ldr	r0, [r4, #0]
 8000ac0:	4401      	add	r1, r0
 8000ac2:	1858      	adds	r0, r3, r1
 8000ac4:	4282      	cmp	r2, r0
 8000ac6:	6019      	str	r1, [r3, #0]
 8000ac8:	d1de      	bne.n	8000a88 <_free_r+0x24>
 8000aca:	6810      	ldr	r0, [r2, #0]
 8000acc:	6852      	ldr	r2, [r2, #4]
 8000ace:	4401      	add	r1, r0
 8000ad0:	6019      	str	r1, [r3, #0]
 8000ad2:	605a      	str	r2, [r3, #4]
 8000ad4:	e7d8      	b.n	8000a88 <_free_r+0x24>
 8000ad6:	d902      	bls.n	8000ade <_free_r+0x7a>
 8000ad8:	230c      	movs	r3, #12
 8000ada:	602b      	str	r3, [r5, #0]
 8000adc:	e7d4      	b.n	8000a88 <_free_r+0x24>
 8000ade:	6820      	ldr	r0, [r4, #0]
 8000ae0:	1821      	adds	r1, r4, r0
 8000ae2:	428a      	cmp	r2, r1
 8000ae4:	bf01      	itttt	eq
 8000ae6:	6811      	ldreq	r1, [r2, #0]
 8000ae8:	6852      	ldreq	r2, [r2, #4]
 8000aea:	1809      	addeq	r1, r1, r0
 8000aec:	6021      	streq	r1, [r4, #0]
 8000aee:	6062      	str	r2, [r4, #4]
 8000af0:	605c      	str	r4, [r3, #4]
 8000af2:	e7c9      	b.n	8000a88 <_free_r+0x24>
 8000af4:	bd38      	pop	{r3, r4, r5, pc}
 8000af6:	bf00      	nop
 8000af8:	20000084 	.word	0x20000084

08000afc <_malloc_r>:
 8000afc:	b570      	push	{r4, r5, r6, lr}
 8000afe:	1ccd      	adds	r5, r1, #3
 8000b00:	f025 0503 	bic.w	r5, r5, #3
 8000b04:	3508      	adds	r5, #8
 8000b06:	2d0c      	cmp	r5, #12
 8000b08:	bf38      	it	cc
 8000b0a:	250c      	movcc	r5, #12
 8000b0c:	2d00      	cmp	r5, #0
 8000b0e:	4606      	mov	r6, r0
 8000b10:	db01      	blt.n	8000b16 <_malloc_r+0x1a>
 8000b12:	42a9      	cmp	r1, r5
 8000b14:	d903      	bls.n	8000b1e <_malloc_r+0x22>
 8000b16:	230c      	movs	r3, #12
 8000b18:	6033      	str	r3, [r6, #0]
 8000b1a:	2000      	movs	r0, #0
 8000b1c:	bd70      	pop	{r4, r5, r6, pc}
 8000b1e:	f000 f8f5 	bl	8000d0c <__malloc_lock>
 8000b22:	4a23      	ldr	r2, [pc, #140]	; (8000bb0 <_malloc_r+0xb4>)
 8000b24:	6814      	ldr	r4, [r2, #0]
 8000b26:	4621      	mov	r1, r4
 8000b28:	b991      	cbnz	r1, 8000b50 <_malloc_r+0x54>
 8000b2a:	4c22      	ldr	r4, [pc, #136]	; (8000bb4 <_malloc_r+0xb8>)
 8000b2c:	6823      	ldr	r3, [r4, #0]
 8000b2e:	b91b      	cbnz	r3, 8000b38 <_malloc_r+0x3c>
 8000b30:	4630      	mov	r0, r6
 8000b32:	f000 f841 	bl	8000bb8 <_sbrk_r>
 8000b36:	6020      	str	r0, [r4, #0]
 8000b38:	4629      	mov	r1, r5
 8000b3a:	4630      	mov	r0, r6
 8000b3c:	f000 f83c 	bl	8000bb8 <_sbrk_r>
 8000b40:	1c43      	adds	r3, r0, #1
 8000b42:	d126      	bne.n	8000b92 <_malloc_r+0x96>
 8000b44:	230c      	movs	r3, #12
 8000b46:	4630      	mov	r0, r6
 8000b48:	6033      	str	r3, [r6, #0]
 8000b4a:	f000 f8e0 	bl	8000d0e <__malloc_unlock>
 8000b4e:	e7e4      	b.n	8000b1a <_malloc_r+0x1e>
 8000b50:	680b      	ldr	r3, [r1, #0]
 8000b52:	1b5b      	subs	r3, r3, r5
 8000b54:	d41a      	bmi.n	8000b8c <_malloc_r+0x90>
 8000b56:	2b0b      	cmp	r3, #11
 8000b58:	d90f      	bls.n	8000b7a <_malloc_r+0x7e>
 8000b5a:	600b      	str	r3, [r1, #0]
 8000b5c:	18cc      	adds	r4, r1, r3
 8000b5e:	50cd      	str	r5, [r1, r3]
 8000b60:	4630      	mov	r0, r6
 8000b62:	f000 f8d4 	bl	8000d0e <__malloc_unlock>
 8000b66:	f104 000b 	add.w	r0, r4, #11
 8000b6a:	1d23      	adds	r3, r4, #4
 8000b6c:	f020 0007 	bic.w	r0, r0, #7
 8000b70:	1ac3      	subs	r3, r0, r3
 8000b72:	d01b      	beq.n	8000bac <_malloc_r+0xb0>
 8000b74:	425a      	negs	r2, r3
 8000b76:	50e2      	str	r2, [r4, r3]
 8000b78:	bd70      	pop	{r4, r5, r6, pc}
 8000b7a:	428c      	cmp	r4, r1
 8000b7c:	bf0b      	itete	eq
 8000b7e:	6863      	ldreq	r3, [r4, #4]
 8000b80:	684b      	ldrne	r3, [r1, #4]
 8000b82:	6013      	streq	r3, [r2, #0]
 8000b84:	6063      	strne	r3, [r4, #4]
 8000b86:	bf18      	it	ne
 8000b88:	460c      	movne	r4, r1
 8000b8a:	e7e9      	b.n	8000b60 <_malloc_r+0x64>
 8000b8c:	460c      	mov	r4, r1
 8000b8e:	6849      	ldr	r1, [r1, #4]
 8000b90:	e7ca      	b.n	8000b28 <_malloc_r+0x2c>
 8000b92:	1cc4      	adds	r4, r0, #3
 8000b94:	f024 0403 	bic.w	r4, r4, #3
 8000b98:	42a0      	cmp	r0, r4
 8000b9a:	d005      	beq.n	8000ba8 <_malloc_r+0xac>
 8000b9c:	1a21      	subs	r1, r4, r0
 8000b9e:	4630      	mov	r0, r6
 8000ba0:	f000 f80a 	bl	8000bb8 <_sbrk_r>
 8000ba4:	3001      	adds	r0, #1
 8000ba6:	d0cd      	beq.n	8000b44 <_malloc_r+0x48>
 8000ba8:	6025      	str	r5, [r4, #0]
 8000baa:	e7d9      	b.n	8000b60 <_malloc_r+0x64>
 8000bac:	bd70      	pop	{r4, r5, r6, pc}
 8000bae:	bf00      	nop
 8000bb0:	20000084 	.word	0x20000084
 8000bb4:	20000088 	.word	0x20000088

08000bb8 <_sbrk_r>:
 8000bb8:	b538      	push	{r3, r4, r5, lr}
 8000bba:	2300      	movs	r3, #0
 8000bbc:	4c05      	ldr	r4, [pc, #20]	; (8000bd4 <_sbrk_r+0x1c>)
 8000bbe:	4605      	mov	r5, r0
 8000bc0:	4608      	mov	r0, r1
 8000bc2:	6023      	str	r3, [r4, #0]
 8000bc4:	f000 f8de 	bl	8000d84 <_sbrk>
 8000bc8:	1c43      	adds	r3, r0, #1
 8000bca:	d102      	bne.n	8000bd2 <_sbrk_r+0x1a>
 8000bcc:	6823      	ldr	r3, [r4, #0]
 8000bce:	b103      	cbz	r3, 8000bd2 <_sbrk_r+0x1a>
 8000bd0:	602b      	str	r3, [r5, #0]
 8000bd2:	bd38      	pop	{r3, r4, r5, pc}
 8000bd4:	20000090 	.word	0x20000090

08000bd8 <__sread>:
 8000bd8:	b510      	push	{r4, lr}
 8000bda:	460c      	mov	r4, r1
 8000bdc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000be0:	f000 f896 	bl	8000d10 <_read_r>
 8000be4:	2800      	cmp	r0, #0
 8000be6:	bfab      	itete	ge
 8000be8:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000bea:	89a3      	ldrhlt	r3, [r4, #12]
 8000bec:	181b      	addge	r3, r3, r0
 8000bee:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000bf2:	bfac      	ite	ge
 8000bf4:	6563      	strge	r3, [r4, #84]	; 0x54
 8000bf6:	81a3      	strhlt	r3, [r4, #12]
 8000bf8:	bd10      	pop	{r4, pc}

08000bfa <__swrite>:
 8000bfa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000bfe:	461f      	mov	r7, r3
 8000c00:	898b      	ldrh	r3, [r1, #12]
 8000c02:	4605      	mov	r5, r0
 8000c04:	05db      	lsls	r3, r3, #23
 8000c06:	460c      	mov	r4, r1
 8000c08:	4616      	mov	r6, r2
 8000c0a:	d505      	bpl.n	8000c18 <__swrite+0x1e>
 8000c0c:	2302      	movs	r3, #2
 8000c0e:	2200      	movs	r2, #0
 8000c10:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c14:	f000 f868 	bl	8000ce8 <_lseek_r>
 8000c18:	89a3      	ldrh	r3, [r4, #12]
 8000c1a:	4632      	mov	r2, r6
 8000c1c:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000c20:	81a3      	strh	r3, [r4, #12]
 8000c22:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000c26:	463b      	mov	r3, r7
 8000c28:	4628      	mov	r0, r5
 8000c2a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000c2e:	f000 b817 	b.w	8000c60 <_write_r>

08000c32 <__sseek>:
 8000c32:	b510      	push	{r4, lr}
 8000c34:	460c      	mov	r4, r1
 8000c36:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c3a:	f000 f855 	bl	8000ce8 <_lseek_r>
 8000c3e:	1c43      	adds	r3, r0, #1
 8000c40:	89a3      	ldrh	r3, [r4, #12]
 8000c42:	bf15      	itete	ne
 8000c44:	6560      	strne	r0, [r4, #84]	; 0x54
 8000c46:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000c4a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000c4e:	81a3      	strheq	r3, [r4, #12]
 8000c50:	bf18      	it	ne
 8000c52:	81a3      	strhne	r3, [r4, #12]
 8000c54:	bd10      	pop	{r4, pc}

08000c56 <__sclose>:
 8000c56:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c5a:	f000 b813 	b.w	8000c84 <_close_r>
	...

08000c60 <_write_r>:
 8000c60:	b538      	push	{r3, r4, r5, lr}
 8000c62:	4605      	mov	r5, r0
 8000c64:	4608      	mov	r0, r1
 8000c66:	4611      	mov	r1, r2
 8000c68:	2200      	movs	r2, #0
 8000c6a:	4c05      	ldr	r4, [pc, #20]	; (8000c80 <_write_r+0x20>)
 8000c6c:	6022      	str	r2, [r4, #0]
 8000c6e:	461a      	mov	r2, r3
 8000c70:	f000 f896 	bl	8000da0 <_write>
 8000c74:	1c43      	adds	r3, r0, #1
 8000c76:	d102      	bne.n	8000c7e <_write_r+0x1e>
 8000c78:	6823      	ldr	r3, [r4, #0]
 8000c7a:	b103      	cbz	r3, 8000c7e <_write_r+0x1e>
 8000c7c:	602b      	str	r3, [r5, #0]
 8000c7e:	bd38      	pop	{r3, r4, r5, pc}
 8000c80:	20000090 	.word	0x20000090

08000c84 <_close_r>:
 8000c84:	b538      	push	{r3, r4, r5, lr}
 8000c86:	2300      	movs	r3, #0
 8000c88:	4c05      	ldr	r4, [pc, #20]	; (8000ca0 <_close_r+0x1c>)
 8000c8a:	4605      	mov	r5, r0
 8000c8c:	4608      	mov	r0, r1
 8000c8e:	6023      	str	r3, [r4, #0]
 8000c90:	f000 f850 	bl	8000d34 <_close>
 8000c94:	1c43      	adds	r3, r0, #1
 8000c96:	d102      	bne.n	8000c9e <_close_r+0x1a>
 8000c98:	6823      	ldr	r3, [r4, #0]
 8000c9a:	b103      	cbz	r3, 8000c9e <_close_r+0x1a>
 8000c9c:	602b      	str	r3, [r5, #0]
 8000c9e:	bd38      	pop	{r3, r4, r5, pc}
 8000ca0:	20000090 	.word	0x20000090

08000ca4 <_fstat_r>:
 8000ca4:	b538      	push	{r3, r4, r5, lr}
 8000ca6:	2300      	movs	r3, #0
 8000ca8:	4c06      	ldr	r4, [pc, #24]	; (8000cc4 <_fstat_r+0x20>)
 8000caa:	4605      	mov	r5, r0
 8000cac:	4608      	mov	r0, r1
 8000cae:	4611      	mov	r1, r2
 8000cb0:	6023      	str	r3, [r4, #0]
 8000cb2:	f000 f847 	bl	8000d44 <_fstat>
 8000cb6:	1c43      	adds	r3, r0, #1
 8000cb8:	d102      	bne.n	8000cc0 <_fstat_r+0x1c>
 8000cba:	6823      	ldr	r3, [r4, #0]
 8000cbc:	b103      	cbz	r3, 8000cc0 <_fstat_r+0x1c>
 8000cbe:	602b      	str	r3, [r5, #0]
 8000cc0:	bd38      	pop	{r3, r4, r5, pc}
 8000cc2:	bf00      	nop
 8000cc4:	20000090 	.word	0x20000090

08000cc8 <_isatty_r>:
 8000cc8:	b538      	push	{r3, r4, r5, lr}
 8000cca:	2300      	movs	r3, #0
 8000ccc:	4c05      	ldr	r4, [pc, #20]	; (8000ce4 <_isatty_r+0x1c>)
 8000cce:	4605      	mov	r5, r0
 8000cd0:	4608      	mov	r0, r1
 8000cd2:	6023      	str	r3, [r4, #0]
 8000cd4:	f000 f83e 	bl	8000d54 <_isatty>
 8000cd8:	1c43      	adds	r3, r0, #1
 8000cda:	d102      	bne.n	8000ce2 <_isatty_r+0x1a>
 8000cdc:	6823      	ldr	r3, [r4, #0]
 8000cde:	b103      	cbz	r3, 8000ce2 <_isatty_r+0x1a>
 8000ce0:	602b      	str	r3, [r5, #0]
 8000ce2:	bd38      	pop	{r3, r4, r5, pc}
 8000ce4:	20000090 	.word	0x20000090

08000ce8 <_lseek_r>:
 8000ce8:	b538      	push	{r3, r4, r5, lr}
 8000cea:	4605      	mov	r5, r0
 8000cec:	4608      	mov	r0, r1
 8000cee:	4611      	mov	r1, r2
 8000cf0:	2200      	movs	r2, #0
 8000cf2:	4c05      	ldr	r4, [pc, #20]	; (8000d08 <_lseek_r+0x20>)
 8000cf4:	6022      	str	r2, [r4, #0]
 8000cf6:	461a      	mov	r2, r3
 8000cf8:	f000 f834 	bl	8000d64 <_lseek>
 8000cfc:	1c43      	adds	r3, r0, #1
 8000cfe:	d102      	bne.n	8000d06 <_lseek_r+0x1e>
 8000d00:	6823      	ldr	r3, [r4, #0]
 8000d02:	b103      	cbz	r3, 8000d06 <_lseek_r+0x1e>
 8000d04:	602b      	str	r3, [r5, #0]
 8000d06:	bd38      	pop	{r3, r4, r5, pc}
 8000d08:	20000090 	.word	0x20000090

08000d0c <__malloc_lock>:
 8000d0c:	4770      	bx	lr

08000d0e <__malloc_unlock>:
 8000d0e:	4770      	bx	lr

08000d10 <_read_r>:
 8000d10:	b538      	push	{r3, r4, r5, lr}
 8000d12:	4605      	mov	r5, r0
 8000d14:	4608      	mov	r0, r1
 8000d16:	4611      	mov	r1, r2
 8000d18:	2200      	movs	r2, #0
 8000d1a:	4c05      	ldr	r4, [pc, #20]	; (8000d30 <_read_r+0x20>)
 8000d1c:	6022      	str	r2, [r4, #0]
 8000d1e:	461a      	mov	r2, r3
 8000d20:	f000 f828 	bl	8000d74 <_read>
 8000d24:	1c43      	adds	r3, r0, #1
 8000d26:	d102      	bne.n	8000d2e <_read_r+0x1e>
 8000d28:	6823      	ldr	r3, [r4, #0]
 8000d2a:	b103      	cbz	r3, 8000d2e <_read_r+0x1e>
 8000d2c:	602b      	str	r3, [r5, #0]
 8000d2e:	bd38      	pop	{r3, r4, r5, pc}
 8000d30:	20000090 	.word	0x20000090

08000d34 <_close>:
 8000d34:	2258      	movs	r2, #88	; 0x58
 8000d36:	4b02      	ldr	r3, [pc, #8]	; (8000d40 <_close+0xc>)
 8000d38:	f04f 30ff 	mov.w	r0, #4294967295
 8000d3c:	601a      	str	r2, [r3, #0]
 8000d3e:	4770      	bx	lr
 8000d40:	20000090 	.word	0x20000090

08000d44 <_fstat>:
 8000d44:	2258      	movs	r2, #88	; 0x58
 8000d46:	4b02      	ldr	r3, [pc, #8]	; (8000d50 <_fstat+0xc>)
 8000d48:	f04f 30ff 	mov.w	r0, #4294967295
 8000d4c:	601a      	str	r2, [r3, #0]
 8000d4e:	4770      	bx	lr
 8000d50:	20000090 	.word	0x20000090

08000d54 <_isatty>:
 8000d54:	2258      	movs	r2, #88	; 0x58
 8000d56:	4b02      	ldr	r3, [pc, #8]	; (8000d60 <_isatty+0xc>)
 8000d58:	2000      	movs	r0, #0
 8000d5a:	601a      	str	r2, [r3, #0]
 8000d5c:	4770      	bx	lr
 8000d5e:	bf00      	nop
 8000d60:	20000090 	.word	0x20000090

08000d64 <_lseek>:
 8000d64:	2258      	movs	r2, #88	; 0x58
 8000d66:	4b02      	ldr	r3, [pc, #8]	; (8000d70 <_lseek+0xc>)
 8000d68:	f04f 30ff 	mov.w	r0, #4294967295
 8000d6c:	601a      	str	r2, [r3, #0]
 8000d6e:	4770      	bx	lr
 8000d70:	20000090 	.word	0x20000090

08000d74 <_read>:
 8000d74:	2258      	movs	r2, #88	; 0x58
 8000d76:	4b02      	ldr	r3, [pc, #8]	; (8000d80 <_read+0xc>)
 8000d78:	f04f 30ff 	mov.w	r0, #4294967295
 8000d7c:	601a      	str	r2, [r3, #0]
 8000d7e:	4770      	bx	lr
 8000d80:	20000090 	.word	0x20000090

08000d84 <_sbrk>:
 8000d84:	4b04      	ldr	r3, [pc, #16]	; (8000d98 <_sbrk+0x14>)
 8000d86:	4602      	mov	r2, r0
 8000d88:	6819      	ldr	r1, [r3, #0]
 8000d8a:	b909      	cbnz	r1, 8000d90 <_sbrk+0xc>
 8000d8c:	4903      	ldr	r1, [pc, #12]	; (8000d9c <_sbrk+0x18>)
 8000d8e:	6019      	str	r1, [r3, #0]
 8000d90:	6818      	ldr	r0, [r3, #0]
 8000d92:	4402      	add	r2, r0
 8000d94:	601a      	str	r2, [r3, #0]
 8000d96:	4770      	bx	lr
 8000d98:	2000008c 	.word	0x2000008c
 8000d9c:	20000094 	.word	0x20000094

08000da0 <_write>:
 8000da0:	2258      	movs	r2, #88	; 0x58
 8000da2:	4b02      	ldr	r3, [pc, #8]	; (8000dac <_write+0xc>)
 8000da4:	f04f 30ff 	mov.w	r0, #4294967295
 8000da8:	601a      	str	r2, [r3, #0]
 8000daa:	4770      	bx	lr
 8000dac:	20000090 	.word	0x20000090

08000db0 <_init>:
 8000db0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000db2:	bf00      	nop
 8000db4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000db6:	bc08      	pop	{r3}
 8000db8:	469e      	mov	lr, r3
 8000dba:	4770      	bx	lr

08000dbc <_fini>:
 8000dbc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000dbe:	bf00      	nop
 8000dc0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000dc2:	bc08      	pop	{r3}
 8000dc4:	469e      	mov	lr, r3
 8000dc6:	4770      	bx	lr
